!This program cannot be run in DOS mode.

$
Rich
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
H
jP
WAVAWH
|$@HD$PH
D$8E3
|$0E3
D$(?
fD9<Gu
L$PH
D$(A
|$ I
L\$`
A_A^_
@VWAVH
\$PH
l$XI
HL$h
fD94Cu
HL$h
T$hH
T$hH
\$PH
l$XH
0A^_^
UATAUAVAWH
HL$(
fD9,Bu
HL$(
T$(I
T$(H
u	D9+
HL$@
HT$@
HL$ 
HL$ 
HL$@H
fD9,Au
HT$@HL$ 
T$ I
T$ H
A_A^A]A\]
\$ H
\$ D
\$@H
t$HH
UVWATAUAVAWH
L$xL
d$PL
|$@H
\$8H
D$0H
M0H
Qd
HL$h
HMpH
fD9$Au
HUpHL$h
HT$hHL$`
T$`H
T$hH
H@H
D$(L
t$ M
t$@H
|$8H
D$0H
D$ c
T$`H
T$hH
L4@J
|$(H
t$ M
|$@H
\$8H
D$0H
D$ 

A_A^A]A\_^]
|$ AUAVAWH
\$XH
t$`H
|$hH
0A_A^A]
\$PHT$P
D$(H
l$xA
t$ ;t$P
uDMF
@UVWH
\$`H
f9<Bu
L$ D
HU0HM
f9<Bu
\$`H
@_^]
UATAUAVAWH
D$xH
D$hH
t$`D
D$0HD$`H
D$(HD$pH
D$ LL$xLD$hHU`I
uHM
D!d$PL!d$H
t$@H
|$8H
D$0H
D$ 5
|$p3
D!d$PL!d$HD
t$@H
t$8H
D$0H
D$ D
D!d$PL!d$H
t$@H
|$8H
D$0H
D$ I
t$`E
D!d$PL!d$H
t$@H
|$8H
D$0H
D$ Y
D!d$PL!d$H
t$@H
|$8H
D$0H
D$ ^
HUpHL$d
D$hH
t$@H
|$8H
D$0H
t	HM
|$@H
\$8H
D$0H
D$hH
t$@H
|$8H
D$0H
D$hH
t$@H
|$8H
D$0H
T$d3
t$PH
|$@H
\$8H
D$0H
T$pH
T$hH
T$xH
A_A^A]A\]
\$ L
\$XH
t$`H
|$hH
x AVH
H
US
\$0H
|$HH
l$8H
t$@H
WAVAWH
fD9<Zu
\$@H
l$HH
t$PH
 A_A^_
VWAVH
\$XH
l$`H
0A^_^
tI9J
\$0H
x ATAVAWH
Lct$`M
B<3+
H+H
\$@H
t$PHc
|$Xf
 A_A^A\
x AVH
Pu4H
\$0H
l$8H
t$@H
|$HH
WAVAWH
H,qI
JqH
l$HH
\$@f
 A_A^_
D9B}-E
WAVAWH
\$@H
l$HH
t$PI
 A_A^_
H SUVWAVH
 A^_^][
x AVH
sfD93t
\$0H
l$8H
t$@H
|$HH
HL$8
HL$8
L$ WH
\$@H
VWAVH
D$ H
t$PL
t$HH
|$@H
\$8E3
u L\$`A
A^_^
|$@H
\$8E3
\$pH
t$xH
WAVAWH
D$hH
t(E3
D$pH
|$@H
\$8H
D$0H
D$ &
|$@H
\$8H
D$0H
D$ 0
A_A^_
x AVH
|$HH
l$8H
t$@H
 Hy`H
\$0H
 Hy`H
\$0H
@SVWATAUAVAWH
L$`I
\$hH
L$pE3
|$PL
|$@H
\$8L=%O
|$0L%
A_A^A]A\_^[
|$PL
|$@H
\$8L={N
|$0L%
t$ L
|$PL
|$@H
\$8L=
|$0L%LK
IE`H
D$`A
EPIuLH
D$`H
E@A!EH!
D$`H
|$@H
\$8L
|$0L
WATAUAVAWH
|$@H
\$8E3
 H;n
L\$`3
A_A^A]A\_
|$@H
\$8E3
D$ =
x ATAVAWH
t$PL
|$XH
\$@H
 A_A^A\
SVWATAUAVAWH
|$PL
|$@H
\$8H
D$0H
D$pH
D!d$PL!d$H
t$@H
|$8H
D$0H
D!d$PL!d$H
|$@H
\$8H
D$0H
t$@H
|$8H
D$0H
LD$hH
|$@H
\$8H
D$0H
D$ A
|$@H
\$8H
D$0H
D$hI
T$hI
|$@H
\$8H
D$0H
D$ 
L$hH
t$@H
|$8H
D$0H
A_A^A]A\_^[
WATAUAVAWH
L$h3
|$(H
D$ L
|$PL
|$HD
t$@H
t$8L-
l$0L%
D$ q
H5g>
L$hH
T$hH
L$`H
|$PL
|$@H
\$8L
l$0L
|$`L
|$pLD$pHT$`H
|$PL
|$@H
\$8L
l$0L
D$hH
|$PL
|$@H
\$8H
\$0L
D$ ;
D$hH
|$PL
|$@H
\$8H
D$0L
D$ I
|$PL
|$@H
\$8L
l$0L
H5r;
D$hH
|$PL
|$@H
\$8L
l$0L
A_A^A]A\_
Pu"H
\$0H
t$8H
\$0H
A HA
\$0H
 H
gh
H
<h
\$0H
D$ H
SHc
O
u
H

p AWH
t$ HH
L=]$
H=>$
|$0A
D$$I;
u$L97t
D$$H
t*H

 wtf
ukf+
D95^
D$ H
\$0H
D$8H
D$8H
D$@LD$@HT$8H
T$8H
T$@H
8csm
u*9Q<|%y<
HcA<H
$8PE
f9H\u
LcA<E3
PL;
t"H+
\$0H
u HcA<H
\$ UH
HM H
 H3E H3E
\$HH
D$HE3
HT$PH
D$@H
HD$XH
D$0HD$`H
D$(H
D$ L
L$@L
D$HH
T$P3
hH
t
x AVH
\$0H
l$8H
t$@H
|$HH
x AVH
\$0H
l$8H
t$@H
|$HH
@SUWH
|$@H
\$8H
D$0H
D$ &
|$@H
\$8H
D$0H
D$ 0
`_][
@SUVWAVAWH
|$@H
\$8H
D$0H
D$ 
t$@H
|$8H
D$0H
hA_A^_^][
(H
}V
\$0H
t$8H
MigHost: RegisterMigrationIIDsAndTypeInfo: GetModuleFileName failed gle=[0x%x].
MigHost: RegisterMigrationIIDsAndTypeInfo: CreateVolatileRegValue(%s, %s, %s) failed gle=[0x%x].
MigHost started with command line: %s
MigHost: OpenEvent(%s) failed.
MigHost: Initialization completion event name has not been specified.
MigHost: OpenProcess(%d) for parent process id failed.
MigHost: Parent process ID has not been specified.
MigHost: Initialized successfully with CLSID[%s] and LogDir=[%s]
MigHost: Exiting process.
MigHost: Failed to register surrogate class factory with CLSID[%s] and LogDir=[%s].
MigHost: Failed to initialize surrogate with CLSID[%s] and LogDir=[%s].
MigHost: Failed to register interfaces and type info. Exiting process.
MigHost: CSingletonClassFactory::RegisterClassObject: CoRegisterClassObject failed with hr=0x%x
MigHost: CSingletonClassFactory::RevokeInstance: CoRevokeClassObject failed with hr=0x%x
MigHost: CMigPluginSurrogate::Init: failed to create event gle=0x%x
MigHost: CMigPluginSurrogate::Init: Successfully initialized surrogate.
MigHost: CMigPluginSurrogate::LoadDllServer: Invalid argument: BinaryPath == NULL.
MigHost: CMigPluginSurrogate::LoadDllServer: Invalid argument: BinaryPath=[%s] does not exist.
MigHost: CMigPluginSurrogate::LoadDllServer in progress: BinaryPath=[%s], CLSID=[%s], ApartmentThreadingModel=[%d].
MigHost: CMigPluginSurrogate::LoadDllServer finished: Result=[0x%x].
MigHost: CMigPluginSurrogate::FreeSurrogate: hThread=0x%x, ThreadId=0x%x, timeout.
MigHost: CMigPluginSurrogate::WaitForHostTermination: Parent process unexpectedly exited. Terminating host.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: Loaded server(%s)
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: LoadLibraryExW(%s, LOAD_WITH_ALTERED_SEARCH_PATH) failed gle=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: File is present, most likely it does not load on the current OS version
DllGetClassObject
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: GetProcAddress(%s, DllGetClassObject) failed gle=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: DllGetClassObject(%s) failed hr=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: CoRegisterClassObject(%s) failed hr=0x%x.
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: Successfully loaded and registered server(%s)
MigHost: CMigPluginSurrogate::LoadAndRegisterServerInThreadContext: FreeLibrary(%s) failed gle=0x%x.
MigHost: CMigPluginSurrogate::UnRegisterServerInThreadContext: CoDisconnectObject failed hr=0x%x on ThreadID=[0x%x].
MigHost: CMigPluginSurrogate::UnRegisterServerInThreadContext: CoRevokeClassObject failed hr=0x%x on ThreadID=[0x%x].
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: ThreadID=[0x%x], Server=[%s], CLSID=[%s], ApartmentThreadingModel=[%d]
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: CoInitializeEx(%s) failed hr=0x%x.
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: LoadAndRegisterServerInThreadContext() succeeded.
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: Exiting ThreadID=[0x%x].
MigHost: CMigPluginSurrogate::COMGenericThreadingHostThreadProc: LoadAndRegisterServerInThreadContext() failed hr=0x%x.
=L9o<
RSDS/y
20~!
mighost.pdb
GCTL
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCL
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.gfids
.giats
.rdata
.rdata$r
.rdata$zzzdbg
.xdata
.xdata$x
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data
.bss
.pdata
.rsrc$01
.rsrc$02
20~!

p`
2p	
RegCloseKey
RegCreateKeyExW
RegSetValueExW
ADVAPI32.dll
GetModuleFileNameW
GetLastError
GetFileAttributesW
LocalFree
HeapSetInformation
SetUnhandledExceptionFilter
OpenEventW
OpenProcess
SetErrorMode
SetEvent
CloseHandle
TerminateProcess
GetCurrentProcess
SizeofResource
LockResource
LoadResource
FindResourceExW
InitializeCriticalSection
DeleteCriticalSection
CreateEventW
EnterCriticalSection
LeaveCriticalSection
CreateThread
ResumeThread
OpenThread
WaitForSingleObject
WaitForMultipleObjects
LoadLibraryExW
GetProcAddress
FreeLibrary
GetCurrentThreadId
KERNEL32.dll
__CxxFrameHandler3
__C_specific_handler
_wcsnicmp
_wtol
wcschr
memmove_s
memcpy_s
_vscwprintf
vswprintf_s
free
calloc
_CxxThrowException
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
exit
_exit
_cexit
__setusermatherr
_initterm
_wcmdln
_fmode
_commode
msvcrt.dll
??1type_info@@UEAA@XZ
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
StringFromGUID2
CLSIDFromString
CoInitializeEx
CoUninitialize
CoRegisterClassObject
CoDisconnectObject
CoRevokeClassObject
ole32.dll
MessageBoxW
PostThreadMessageW
GetMessageW
DispatchMessageW
UnregisterClassA
USER32.dll
CommandLineToArgvW
SHELL32.dll
SHDeleteKeyW
SHLWAPI.dll
WdsSetupLogMessageW
CurrentIP
ConstructPartialMsgVW
WdsInitialize
WdsTerminate
WDSCORE.dll
HeapSize
HeapReAlloc
HeapFree
HeapAlloc
GetProcessHeap
HeapDestroy
RaiseException
Sleep
GetStartupInfoW
GetModuleHandleW
QueryPerformanceCounter
GetCurrentProcessId
GetSystemTimeAsFileTime
GetTickCount
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
memset
.?AVCAtlException@ATL@@
.?AUIUnknown@@
.?AVCSingletonClassFactory@@
.?AVCMigPluginSurrogate@@
.?AUIHostingTask@@
.?AUIMigPluginSurrogate@@
.?AUIClassFactory@@
""'xw
""""z
"""'z
"""'
**"'
**"x
**"x
~nnnnnnngx
nnngwwp
wwwx
wwwwwwww
wwwwwwwwwx
wwwwwwx
wwww
wwwx
wwwww
nnnn
nnwww

wwwwx
wwwwwx
wwww
www}
wwwwp
wwwwww
W7'''''7A
C#[/>iiD>8!#7
SSSSSSSS~
WU'%]469=EFHJNl0#A
!d"(.469=EFHJMTr
$(.469=EFHJ
$(.469=EFM
$(.469=ET
P!AW
$(.469F
$(.46J
fm,&
	.5
%53,&
/953,&
]:953,&
XYYYYO#
i=:953,&H
	d*g
Ysssssss
i=;:953,M
qqqqqqq)A
m:::::::R
svvvvvvvgA
]:::::::M
B$1_`ajbgA
^::::::;M
K[d[
$(.469+A
)::::EMT
$(.46%A
`=JS
$(]#
R:953,&

=:953,&
TFB=:953,&
RHEB=:953,&
M
HEB=:953,&"\f
xgsTMJ
HEB=:953-\2
nNMJ
HEB=:`^[@
8nDDbih/[g
x!!ff
?[8?GOQY
0c%%\\))8?GlQV
lc%%\\))dd++ee//>nl
ed))dd++ee///^^^O
{{]^///^^^^Q
SMJJ
}zwmmhvLHFFHJMZ
YYYY
}}}yyyti=BF
JMRS
}}}yyytt
DF
JMRS
}}}yyyttp
u
JMRT
}}}yyyttpD
OMRT
}}}yyyttppGW
luunniiDu
UBFU
R@55B
46*+5
+#-28<
CE=+FU
x.BU
&,[7
&,[\C
$(" 
!"%,[M
WWWtF>
Swwwj=B>
{A5>
777\;
/_]`n5>
\\\;C
2"&,\45>
(%" 
V<8\
,%" 
;8721^.
0
C
<930>
AADIN
*.**)
6AD}II
uee*))))00
||offZZZJj
~~vvvlia<<
~~vvphh
?CGM
~~vvpphc_
dnzzqqmhcd
KKKKQKT
KKKK
ErT,-468
.:><1
!%);
~{onyR
wv}|
zmg]/0
MfSI*
xthbZQO;?
ulid\VL
MMMMMMMMMMMM
&888
3HHH
S0  
LUUU
gU99
;;;Ueee
SSS)}}}
```H
aaaH
bbbH
cccH
dddH
eeeH
eeeH
fffH
gggH
iiiH
jjjH
kkkH
lllH
mmmH
mmmH
nnnH
oooH
pppH
rrrH
sssH
tttH
uuuH
vvvH
vvvH
wwwH
xxxH
nIIY
yyyH
N;;S
{{{H
|||H
{{{I
---2
wwwL
sssc
OOOt
III 
xxxu
bbb1
xxxe
&;;;
{0  
&LLL
ccc_
iiic
jjjb
kkkb
kkkb
lllb
nnnb
ooob
qqqb
rrrb
tttb
uvwb
O44`
{{{f
...'
wwwX
ZDooo'MMM
GGGZ
=ccc#
heee"
hhh"
lkk"
mno"
_qv}"
.uy}"
0  D
www#
5""G
lll$
ooo5
TEEE
MSFT
[PPTP00
[PPTP00,

[wHJ
iPPTP00
_PPTP00
NuNlI
iPPTP00
_PPTP00h
_PPTP00
_PPTP000
iPPTP00
iPPTP00
iPPTP00
iPPTP00D
iPPTP00
vYsKB
CPPTP00,
_PPTP00
_PPTP00
eiVn`C
CPPTP00
VPPTP00l 
6|xU<
lKP-
F^6JC
CPPTP00p0
S, 5
_PPTP00
_PPTP00
_PPTP00L6
_PPTP00
_PPTP00
_PPTP00x7
Yq"\0
2krI
F'z	
CPPTP00l9
VPPTP004:
qN<*~
iPPTP00
iPPTP00
iPPTP00T=
iPPTP00
iPPTP00
iPPTP00

mY)
q8V
CPPTP00
au_,
| N
_PPTP00
\PPTP00LO
\PPTP00
\PPTP00
D;JmN
d@)|
U,4S
V11oF
_	.]C
_PPTP00
\PPTP00h[
\PPTP00
\PPTP00
~`{FXW
stdole2.tlbWWW
Cmi20WWW
ICmiFactoryWd
CmiObjectTypeWWWd
cmiAssemblyWd
cmiIdentityDefinitionWWWd
4cmiIdentityReferenced
cmiDependencyWWWd
cmiAssemblyDependencyWWWd
OcmiCategoryDependencyWWWd
+cmiCategoryMembershipWWWd
cmiVersionWWd
cmiRegistryKeyWWd
cmiRegistryValued
cmiFileWd
PcmiSerializerWWWd
cmiRepositoryWWWd
cmiFileComClassWd
cmiFileComInterfaceProxyStubd
cmiFileTypelibWWd
058cmiFileWindowClassWWd
cmiConfigurationd
cmiResolverWd
cmiInstanceFactoryWWd
ecmiReferenceFactoryWd
cmiInstanceWd
ucmiReferenced
cmiInstallContextWWWd
cmiTargetWWWd
?cmiEnvironmentWWd
cmiInstallerManagerWd
cmiGenericCommandWWWd
cmiRegistrationCommandWWd
cmiFileRepositoryWWWd
*cmiFileDependencyWWWd
0,WcmiDirectoryd
!cmiVariantMapWWWd
cmiCustomElementd
cmiCustomAttributeWWd
cmiRepositoryInitializerd
cmiInstallerRegistration
( 9cmiPairWd
cmiInstallerSequenced
cmiEventArgumentsWWWd
cmiStringTableEntryWd
hcmiLocalizationResourcesd
0P-cmiLocalizationInformationWWd
"cmiCmiSecurityInformationWWWd
cmiSecurityDescriptorDefinitionWd
cmiSecurityDescriptorReferenceWWd
cmiGenericTrusteeWWWd
cmiGroupTrusteeWd
cmiDomainTrusteed
cmiTokenReplacerd
cmiConfigurationAnswerWWd
cmiReferenceAnswerWWd
0cmiInstanceAnswerWWWd
cmiInfSerializerd
cmiSysprepInformationWWWd
cmiSysprepModuled
4cmiImagingInformationWWWd
cmiInstalledRepositoryWWd
cmiMigrationPatternWd
cmiMigrationInformationWd
cmiMigrationIncludeInformationWWd
0.KcmiMigrationExcludeInformationWWd
-cmiMigrationElementInformationWWd
IcmiMigrationSupportedComponentWWd
cmiMigrationPluginWWd
scmiRedirectInformationWWd
cmiSimpleIdentityWWWd
5cmiUnattendFileWd
cmiComponentSettingsd
cmiSettingInstanceWWd
cmiSettingOverrideInstanceWWd
cmiExcludeReferenceWd
IcmiRepositorySetd
cmiQualifiedSettingNameWd
cmiSettingInformationWWWd
0;6cmiSettingDefinitiond
%0	hcmiSettingOverrideConflictInformationWWWd
cmiIdentityReferenceRangeWWWd
cmiPrivateTestPackagerWWd
cmiFileRepositorySetd
cmiBindingRedirectWWd
cmiCategoryInstanceWd
0AycmiCmiLogConfigWd
cmiInstrumentationInformationWWW
CreateObject
ObjectTypeWW
j}ArgumentsWWW
.ObjectWW
8r3ICmiFactoryEventSourceWW,
ICmiFactoryCallbackW,
PostProcessObjectWWW
Type
xJNewObjectWWW
pAdviseWW
Callback
FiltersW
Unadvise
8!(IDictionaryW
zItem
KeyW
KValueWWW
0vCountWWW
rAddW
RemoveWW
ClearWWW
xA_NewEnum
ValuesWW
8|bICmiCollectionWW
IndexWWW
RemoveAtX
=CmiNamespacesWWWX
cmiNamespaceNoneX
8cmiNamespaceV1WWX
8cmiNamespaceV2WW
{NamespaceWWW
IVersion
MajorWWW
aMinorWWW
EBuildWWW
Revision 
QCmiCompareConsts 
0l6cmiEqual 
0h5cmiNotEqualW 
cmiGreaterThanWW 
cmiLessThanW 
ecmiMatch 

0DcmiNoMatchWW 
cmiNotComparable
CompareW
RhsW
urResultWW
N!IsPartialWWW
PartialW
ICmiExtensionWWW
CustomInformationsWW
rICustomInformationWW
" NamespaceUri
iQualifierWWW
aLocalNameWWW
GetFullNameW
FullName
lContentW
InnerContent
AttributesWW
SubElementsW
Elements
LookupNamespaceW
InnerTextWWW
ParentWWL
RIIdentityWWWL
Name
VersionWL
NLanguageL
ProcessorArchitectureWWWL
BuildTypeWWWL
q*PublicKeyTokenWWL
4<ReadOnlyL
ToStringL
GetHashCodeW
HashCode
pValL
VersionScope
IIdentityDefinitionW
IIdentityReferenceWW
AssignIdentityDefinition
8w%IdentityDefinitionWWx
IDependencyWx
 DescriptionWx
ZgOptionalx
Discoverablex
7zResourceTypex
OfflineInstallWWx
SubObjectWWW
/ICmiPair
SecondWW
zFirstWWW@
IAssemblyDependencyW@
@DependencyId@
RBindingRedirects@
SettingOverrides@
InstallW@
pDependencyTypeWW
	8/IAssemblyWWW
]IdWW
DisplayNameW
CompanyW
!/CopyrightWWW
SupportInformationWW
EstimatedSizeWWW
NumberOfBytesWWW
O0CreationTime
LastUpdateTimeWW
Released
EndOfLifeWWW
VDirtyWWW
lManifestResourceDependencyWW
DependencyWW
OwnersWW
TestersW
AuthorsW
)Comments
SettingOverrideInstances
"MembershipsW
Dependencies
wXFilesWWW
TDirectoriesW
RRegistryKeys
ComInterfaceExternalProxyStubsWW
*GenericCommandsW
,RegistrationCommands
InstallerRegistrationsWW
ICmiSecurityInformationW
`Trustees
SecurityDescriptorDefinitionsWWW
SecurityInformationW
NoInheritWWW
NoInheritableWWWl
*ILocalizationInformationl
FallbackCultureW
%'CultureWt'
LocalizationResourcesWWW
ResourcesWWW
LocalizationInformationW
IImagingInformationW4
SISysprepInformationW4
SysprepModulesWW,L
ModulesW
SysprepInformationWW<A
(QuImagingInformationWW
CIMigrationInformationWWW
IMigrationPlugin0*
File
KDClassIdW
PluginWW
SupportedComponentsWx7
MigrationInformation`	
IRedirectInformation`	
AssemblyIdsW
+RedirectInformationW
CmiComponentType
4cmiAssemblyComponent
0FgcmiFeatureComponentW
cmiCategoryComponent
GetComponentType
ComponentTypeWWW
AssembliesWW
ApInputSourceW(

IInstrumentationInformationW
InstrumentationInformationWW
IBindingRedirect
OldVersionWW
_OldVersionMaxWWW
NewVersionWW
ICategoryDependencyWT
CategorySelectionConstsWT
zcmiExactlyOneWWWT
cmiAtLeastOneWWWT
cmiZeroOrOneT
cmiAllWWT
cmiNoneW
SelectionWWW
TypeName
ICategoryMembershipW
bCategoryInstancesWWW
ICategoryInstanceWWW
4SubCategoryW
IFileWWW
QHash
HashAlgorithmWWW
2DestinationNameW
DestinationPathW
SourceNameWW
vSourcePathWW
Size
ComClassesWW
ComInterfaceProxyStubsWW
Typelibs
@
WindowClassesWWW
ImportPathWW
8I0ISecurityDescriptorReference
OfflineW
SecurityDescriptorWW
MCreateWWH

VMigrationTypeWWWH

cmiMigrationTypeInheritWH

ccmiMigrationTypeMigrateWH

cmiMigrationTypeNoMigrateWWWH

cmiMigrationTypeOverwriteWWWH

CcmiMigrationTypeCreateOnlyWWH

cmiMigrationTypeRenameWW
MigrateW
FileCompressionTypeW
cmiCompressionFormatDontCare
^cmiCompressionFormatNone
0jmcmiCompressionFormatDefaultW
cmiCompressionFormatLznt1WWW
MCompressionW
uFileWriteableTypeWWW
cmiWriteableTypeSystemDataWW
.cmiWriteableTypeStaticWW
WriteableTypeWWWt
GIFileComClassWWWt
KProgidWWt
ClsidWWWt
U>ThreadingModelWWt
YoTlbidWWW
IFileComInterfaceProxyStubWW
ProxyNameWWW
IidW
MethodCountW
ProxyStubClsid32
6|BaseInterfaceWWW
Text<
wIFileTypelib<
HelpDirW<
ResourceIdWW<
oFlagsWWW
IFileWindowClass
VersionedWWW
>IRegistryKey
KeyNameW
OwnerWWW
RegistryValuesWWh
8>wIMigrationElementInformation
IMigrationIncludeInformation
fPatternsh
bIncludeInformationWW0
IMigrationExcludeInformationh
ExcludeInformationWW
PerUserVirtualizationWWW
MapAccessWWW
IRegistryValueWW
RegistryValueTypeWWW
cmiRegNoneWW
cmiRegSz
0r3cmiRegExpandSzWW
cmiRegBinary
cmiRegDwordW
cmiRegDwordLittleEndianW
0b3cmiRegDwordBigEndian
9cmiRegLinkWW

0i:cmiRegMultiSzWWW
cmiRegResourceListWW
cmiRegFullResourceDescriptor
cmiRegResourceRequirementsListWW
00)cmiRegQwordW
cmiRegQwordLittleEndianW
;Data
0PutValue\
OperationHintWWW\
0YdcmiHintDefaultWW\
cmiHintReplaceWW\
cmiHintAppendWWW\
&cmiHintPrependWW
IGenericCommandW
ExecutableNameWW
PassesWW$
GenericCommandSuccessCodeConstsW$
cmiZeroW$
cmiLessThanZeroW$
cmiGreaterThanZeroWW$
cmiZeroOrLessThanZeroWWW$
!cmiZeroOrGreaterThanZero
SuccessCodeW
IRegistrationCommand
XZUnregisterArgumentsW
TimeoutW
Register
InstallationPass
cmiStagePass
cmiBootstrapPass
?cmiOnlinePassWWW
cmiConfigurationPass
05^cmiGeneralizePassWWW
XcmiSpecializePassWWW
cmiCleanupPassWW
cmiReconfigurationPassWW

0aKcmiStage2PassWWW
Pass
UnregisterPassWWP
IFileDependencyW
WISecurityDescriptorDefinitionWWW
Sddl
{Hint
RITrustee
SidW|
TrusteeTypeW|
cmiTrusteeUserWW|
+cmiTrusteeGroupW|
/cmiTrusteeDomain|
cmiTrusteeAliasW|
0bcmiTrusteeWellKnownGroup|
cmiTrusteeDeletedAccount|
cmiTrusteeInvalidWWW|
cmiTrusteeUnknownWWW|
cmiTrusteeComputerWW|
AcmiTrusteeAccountWWW|
cmiTrusteeVirtualAccount
EnabledW
PrivilegesWW
IGenericTrusteeWD

8SNIGroupTrusteeWWWD
MembersWD
eeCapabilities
@IDomainTrusteeWW
ISerializerW
iDeserializeW\D
SourceWW
[(SerializeWWW
DestinationWp
IInfSerializerWWp
SearchPathsWp
PublicKeyTokensW
lIRepositoryW
GetAssemblyIdsWW
GetAssemblyW<(
8jAssembly
aIsPresentWWW
PresentW8
QueryTypeWWW8
 cmiQueryGetCategoryMembershipsWW8
%cmiQueryGetCategoryMembersWW8
cmiQueryGetComponentsByTypeW8
0h-cmiQueryGetComponentFromIdWW8
cmiQueryGetComponentDependencies8
cmiQueryGetComponentDependentsWW8
$0:~cmiQueryGetIdentitiesByComponentType8
#0DVcmiQueryGetComponentsFromIdentitiesW8
[cmiQueryGetAllIdentities8
}cmiQueryGetComponentCustomInformationWWW8
0cmiQueryGetIdentitiesFilteredOnIdentityAttributesWWW8
cmiQueryGetFileOwnersWWW8
!04ucmiQueryGetRedirectedToIdentitiesWWW8
FcmiQueryGetComponentSettingOverrides8
cmiQueryGetSettingOverridesForSettingDefinitionW8
cmiQueryGetSettingTypeForSettingDefinitionWW8
cmiQueryGetDefaultValueForSettingDefinitionW8
+0> cmiQueryGetSettingDefinitionsForSettingNameW8
hcmiQueryGetSettingDefinitionsForSettingTypeNameW8
cmiQueryGetSecuredAttributeForSettingDefinitionW8
cmiQueryGetSecuredSettingsForComponentsW8
YcmiQueryGetSettingDefinitionsWithVisibilityForComponents8
cmiQueryGetFileOwnersFromSourceNameW8
QueryTypeGenericQueryWWW
 CreateQueryW
CreateBulkImporterWW
+AccessModeConsts
cmiReadOnlyW
acmiReadWrite
8:<ShareModeConstsW
cmiShare
0KscmiExclusive
Open
smServerNameWW
7DbNameWW
%pAccessModeWW
ShareModeWWW
CloseWWWd
IFileRepositoryWd
RootPathd
RebaseWW
NewRootPathW
+MoveFilesWWWd
ImportWWd
ExportWW
Identityd
GetFileNameW
FileNamed
IdentitiesWWd
RemoveAllWWW
8[YFileRepositoryTypeConsts
cmiDefaultFileRepository
cmiMediaFileRepositoryWWd
GetFileNameForComponentW\D
"ComponentWWW
]CmiObjectsWW
7FileRepositoriesd2
!FileRepositoryWW
'nComponentIdentityWWW
iCBeginTransaction
CommitTransactionWWW
IRollbackTransactionW
7OldPathW
NewPathW
GetFileRepositoryObjectWp
SearchRepositoryp
BinaryImportPathp
InfImportPathWWW,
8HdIXmlSerializerWW,
OmitDeclarationW,
ByteOrderMarkWWW
4CmiXmlEncodingTypesW
0cMcmiUtf8EncodingW
0ycmiUtf16Encoding,
REncoding
8a.ISysprepModuleWW
#>ModuleNameWW
MethodNameWW
StageWWWX
IQueryWWX
ExecuteW
IRepositoryInitializerWW
NInitializeWW
0~RepositoryNameWW
MachineNameW
DestroyW 
ITokenReplacerWW 
FactoryW 
ReplaceTokensWWW
InputObjectW
+OutputObject
IGenericTokenReplacerWWW
IEnvironment
$dExpandWW
ExpressionWW
PairsWWW
TokensWWL
IManifestResourceTokenReplacerWW
RepositoryWWL
FallbackLanguagesWWW
IMigrationPatternWWW
IMigrationSupportedComponentx
8ZNISettingInformationWx
SettingDefinitionsWWx
SettingTypes
ISettingDefinitionWW
VisibilityWW
E;SecuredW@
ISettingInstance@
.ShowUIWW@
q_MergeWWW
T
GetDefaultValueW
DefaultValue
ISettingOverrideInstance
TIQualifiedSettingNameWWWl 
EIInstallerSequenceWWl 
BeforeWWl 
XAfterWWWl 
Sequence
&IInstallerRegistrationWW
3FactoryClsid
InstallersWW
InstallerSequencesWW
SupportedTargets
LProcessorArchitecturesWW
SupportedTypesWW4!
	8^3ICmiEventWWW
ICmiEventArgsWWW
EventIdW
"}ExtraArgumentsWW
LAdditionalArgsWW
ReturnValueW
[ReturnValWWW4!
PostEventWWW
EventArgumentsWW
CmiFactoryWW`"
DictionaryWW
CmiCollectionWWW(#

8"VersionConstsWWW(#
ocmiVersionAnyWWWT$
IdentityReferenceWWW
PAssemblyDependencyWW
BindingRedirectWH&
8'wIStringTableEntryWWW
o
EntryIdW
zEntryValueWW
EntryTypeWWW
nStringTableEntry
8ssILocalizationResourcesWW
StringTableW
CategoryDependencyWW
CategoryInstanceh)
mCategoryMembershipWW
FileAttributeTypeWWW
cmiFileAttributeNormalWW
@cmiFileAttributeReadOnly
2cmiFileAttributeHiddenWW
cmiFileAttributeSystemWW
cmiFileAttributeArchiveW
%cmiFileAttributeTemporaryWWW
cmiFileAttributeSparseFileWW
cmiFileAttributeOfflineW
!029cmiFileAttributeNotContentIndexedWWW
81pFileComClass
FileComInterfaceProxyStubWWW\+
}FileTypelibFlags\+
cmiControlWW\+
QcmiHiddenWWW\+
cmiRestrictedWWW\+
(cmiHasDiskImageW
FileTypelibW$,
85~FileWindowClassW
RegistryKeyW
RegistryValueWWWP-
GenericCommandWW
RegistrationCommandW
8}5FileDependencyWW|.
>IDirectoryWW
	8mGDirectoryWWWD/
SerializerWW
3InfSerializerFlagsWW
!0Q]cmiInfSerializerMarkExternalFilesWWW
cmiInfSerializerNoInstallConversionW
LcmiInfSerializerProcessAllModelsSections
cmiInfSerializerProcessIdentityOnlyW
cmiInfSerializerFullRegistryConversionWW
tcmiInfSerializerInfIsInboxWW
cmiInfSerializerProcessExcludeId
cmiInfSerializerGeneratePnpInfoW0
InfSerializerWWWp0

8QXmlSerializerWWW

8q]QueryFlagsWW
ZcmiConnected
cmiDisconnectedW
jcmiCompleteInformationWW
cmiFirstLevelInformation81
IBulkImporterWWW81
ManifestSearchPatternWWW
1SearchPatternWWW81
BatchCommitSizeW81
MaxDiskFileSizeMBWWW81
TemporaryDirectoryWW81
EnableBatchTransactionWW
wqBatchTransactionOnWW
_BulkImporterEventsW
4BulkImporter
IFileRepositoryPropertiesWWW,3
8R*FileRepositoryFlagsW,3
cmiFileRepositoryCreateLinks,3
6cmiFileRepositorySkipExistingFilesWW,3
cmiFileRepositoryDoNotOverwriteComponentsWWW,3
cmiFileRepositorySkipMissingExternalFilesWWW,3
cmiFileRepositoryUseAlternateSetupPolicyLocation,3
cmiFileRepositorySerializeComponentManifests,3
cmiFileRepositorySkipMissingDriverCatalogFilesWW,3
#cmiFileRepositoryNoCleanupOnImportFailureWWW3
hIFileRepositorySetWW
FileRepositorySetWWWX4
RepositoryTypeConstsX4
cmiDefaultRepositoryX4
!cmiFileBasedRepositoryWW 5
8DERepositoryInitializerWWW
MigrationPattern
MigrationIncludeInformationWL6
vMigrationExcludeInformationW
hMigrationElementInformationW
tMigrationSupportedComponentW
MigrationPluginW@8
SettingInformationWW
SettingDefinitionWWW
SettingInstanceWl9
SettingOverrideInstanceW
QualifiedSettingName4:
InstallerSequenceWWW
InstallationTypeConstsWW
cmiOfflineInstallWWW
cmiOnlineInstall
cmiCompleteInstallWW
YInstallerRegistrationWWW`;
CmiEventArgs
sCmiEventsWWW
JcmiEventInstallerBeginInstallationWW
cmiEventInstallerEndInstallation
cmiEventInstallerBeginUninstallation
cmiEventInstallerEndUninstallationWW
cmiEventBulkImporterBeginManifestShredWW
"cmiEventBulkImporterEndManifestShred
(0(cmiEventBulkImporterCommittedToTempFiles
cmiEventBulkImporterCommittedToStorageWW
LcmiEventPnpInstallerStartWaitForPnpW
DcmiEventPnpInstallerEndWaitForPnpWWW
0#/cmiEventOnInstanceAddedW
cmiEventOnInstanceRemovedWWW
cmiPrivatePackagerNeedSelectionForFileOwnerW(<

TokenReplacerTypesWW(<
0*cmiGenericTokenReplacerW(<
 0H>cmiManifestResourceTokenReplacer
=CmiSecurityInformationWW
SecurityDescriptorDefinitionT=
!SecurityDescriptorReferenceW
lPrivilegeTypeWWW
cmiCreateTokenPrivilegeW
0[ cmiAssignPrimaryTokenPrivilegeWW
cmiLockMemoryPrivilegeWW
0%6cmiIncreaseQuotaPrivilegeWWW
7cmiUnsolicitedInputPrivilege
cmiMachineAccountPrivilegeWW
^cmiTcbPrivilegeW
cmiSecurityPrivilege
cmiTakeOwnershipPrivilegeWWW
8cmiLoadDriverPrivilegeWW
0'kcmiSystemProfilePrivilegeWWW
cmiSystemtimePrivilegeWW
 0o|cmiProfileSingleProcessPrivilege
cmiIncreaseBasePriorityPrivilege
0~
cmiCreatePagefilePrivilegeWW
DcmiCreatePermanentPrivilegeW
cmiBackupPrivilegeWW
cmiRestorePrivilegeW
cmiShutdownPrivilege
cmiDebugPrivilegeWWW
0oicmiAuditPrivilegeWWW
cmiSystemEnvironmentPrivilegeWWW
TcmiChangeNotifyPrivilege
cmiRemoteShutdownPrivilegeWW
cmiUndockPrivilegeWW
?cmiSyncAgentPrivilegeWWW
05[cmiEnableDelegationPrivilege
cmiManageVolumePrivilege
cmiImpersonatePrivilegeW
0r{cmiCreateGlobalPrivilege
cmiInteractiveLogonPrivilege
scmiNetworkLogonPrivilege
VcmiBatchLogonPrivilegeWW
cmiServiceLogonPrivilege
cmiDenyInteractiveLogonPrivilege
cmiDenyNetworkLogonPrivilege
cmiDenyBatchLogonPrivilegeWW
+cmiDenyServiceLogonPrivilege
4cmiRemoteInteractiveLogonPrivilegeWW
cmiDenyRemoteInteractiveLogonPrivilegeWW
GenericTrusteeWW
vGroupTrustee
lDomainTrusteeWWWH?
TokenReplacerWWW
GenericTokenReplacer
8^&ManifestResourceTokenReplacerWWWt@

8jZSysprepModuleWWW
IRepositorySetWW
RepositorieshB
1RepositorySetWWW0C
lIReferenceWW0C
.7DefinitionWW
(YSResolutionStatus
cmiNotStartedWWW
cmiWaitingForSelectionWW
cmiSelectionDone
cmiResolvingChildren
HcmiDeferredW
cmiResolvedW
!ResolutionStageW
cmiDesignTimeWWW
cmiRunTimeWW0C
ResolverIdWW\D
IInstanceWWW\D
ReferencesWW
InstanceSourceWW
0#ucmiUserW
cmiAutoW\D
ReferencedBy$E
IConfigurationWW$E
9AllInstances
_IInstanceFactory

IReferenceFactoryWWW
@jCreateIdentityReferenceW`T
eReferenceWWW
CreateDependencyReferenceWWW
ReferenceFactory
RInstance
RepositoryDispatchWW
FInstanceFactoryWPF
vIResolverWWWPF
RResolveW
ConfigWW
Resolver$E
>ResetWWW
8,%EffectiveSettingsFilterTypeW
0
%cmiEffectiveSettingsNoFilter
}cmiEffectiveSettingsOverridesOnlyWWW$E
&ComputeEffectiveSettingInstances$E
SettingOverrideConflictInformationsW\D
EffectiveSettingInstancesWWW$E
SettingOverrideConflictFlagW$E
EditSequenceNumberWW
IReferenceRedirectionTableWW
ReferenceRangeDictionary
InstanceDictionaryWW|G
gIIdentityReferenceRangeW|G
ReferenceIdW|G
ToVersionWWW
9AddEntry
ReferenceRangeWW
InstanceIdWW
:RemoveByReferenceRangeWW
RemoveByInstanceIdWW
f0RemoveByReferenceIdW
ZInitializedW
(U=ReferenceRedirectionTableWWW$E
tPopulateReferenceRedirectionTableWWW
LowerOffsetW
UpperOffsetW
8CmiLanguageModeW
rcmiLanguageModeNoneW
0h6cmiLanguageModeOneWW
00!cmiLanguageModeLangPackW
cmiLanguageModeAllWW$E
LanguageModeDH
NCmiResolutionModeWWWDH
7cmiFullResolutionWWWDH
	cmiCompositionalResolutionWW$E
JResolutionModeWWTV
ConfigurationWWW\D
SelectWW
Path
eSelectedElements\D
tInstallationStatusWW
8mlIInstallContextWI
rITargetWpI
IInstalledRepositoryI
InstalledRepositoryWI
InstallableRepositoriesWI
5EnvironmentWI
OnlineEnvironmentWWW
FTargetWW
89dIInstallerManagerWWW8J
AIInstallerFactoryWWW
IInstallerWW
=ObjectToInstallW
XnContextW
^aUninstallWWW
ObjectToUninstallWWW8J
CreateInstallerW
6wElementNameW
Registration
IsPublic
qResolveInstaller
InstallContextWW
/GetInstaller
GetSequencedPathsWWW
SequencedPathsWW
8HIInstallerManagerEntryWW
InstallerIdWdK
855InstallerTypeConstsWdK
cmiPublicInstallerWWdK
cmiPrivateInstallerWdK
PcmiStockInstallerWWW
'InstallerTypeWWW
GetRegistrationEntry
EntryWWW
[InstallerManager
InstallationType
CurrentInstanceW
InstallerProcessorArchitectureWW
$TargetProcessorArchitectureW
_8OfflineInstallerRepositoryWW
OptionalPassesWW
RebootIndicatorEnumW
;cmiNoRebootRequiredW
cmiRebootRecommended
ncmiRebootRequiredWWW
RebootIndicatorW
SetupEnvironment
InstallerCapabilityFlags,L
ICmiLogListenerWL
CmiLogLevelWL
cmiLogLevelNoneWL
`cmiLogLevelErrorL
mcmiLogLevelWarningWWL
cmiLogLevelInfoWL
cmiLogLevelTrace,L
LevelWWW,L
FacilitiesWW
CmiLogModuleFlagsWWW
1cmiLogModuleOtherWWW
cmiLogModuleCmiW
lcmiLogModuleTool
cmiLogModuleTrustWWW
cmiLogModulePnpW
cmiLogModuleSysprepW
cmiLogModuleCryptWWW
cmiLogModuleClrW
cmiLogModuleSmiW
cmiLogModuleLocDrvWWXM
HCmiLogFacilityFlagsWXM
cmiLogFacilityOtherWXM
cmiLogFacilityObjectModelWWWXM
cmiLogFacilityXmlWWWXM
0mzcmiLogFacilityInfWWWXM
#cmiLogFacilityRepositoryXM
)cmiLogFacilityConfigurationWXM
=cmiLogFacilityResolverWWXM
ecmiLogFacilityInstallerW,L
CmiLogMessageWWW
ModuleWW
Facility
MessageW
.(LogListenerW
=ReplicatedRepositoryRootPath
WServicingReferenceInstanceWW
GetInstanceFileRepositoryWWW
UsingCmiAdapterW\D
GetLocalizedComponentWWW\D
SelectFromObject
ObjectToSelectFromWW\D
VDefaultSettingInstancesW
SettingNameW\D
ClearComponentWW\D
ClearLocalizedComponentW\D
HasElementWW0C
dParentInstanceWW0C
8SelectionInstancesWW0C
SelectionMax0C
vSelectionMin0C
SelectedInstancesWWW0C
iChildInstancesWW
ICmiWrapperW
.GetInnerObjectWW
InnerUnk N
IUpgraderWWW N
	PUpgradeW
OldW
NewW N
vDowngradeWWW
IPathTranslatorW
8hPathTypeConstsWW
FcmiPathRegistryKeyWW
cmiPathFileW
g_TranslateWWW
ClientProcessorArchitectureW
TranslatedValueWLO
IConfigurationAnswerLO
DefaultIdentityWLO
vyReferenceAnswersLO
InstanceAnswersWLO
ExcludeReferencesWWWLO
!sExcludeComponentsWWWLO
tExcludeOptionalDependenciesWLO
ExcludeWow64ComponentsWW
IReferenceAnswer
IInstanceAnswerWxP
ISimpleIdentityW
WIComponentSettingsWW
SimpleId
SettingInstances@Q
IUnattendFileWWW
ComponentSettingsWWW@Q
ComponentsToAddW@Q
ComponentsToRemoveWW@Q
ComponentsToReplaceW@Q
PApplyToW
UnattendFileValidationLevelW
"08vcmiUnattendPrimitiveNameValidationWW
0.ZcmiUnattendSyntacticValidationWW
9cmiUnattendSemanticValidationWWW@Q
ValidateAgainstWh[
JConfigurationAnswerW@Q
W\ApplyRedirection@Q
hComputeEffectiveChangesW
ISettingOverrideConflictInformationWlR
#IPrivateTestPackagerlR
PackageW
yCarrierDirectoryPathsWWW
CarrierFilePaths
8BinariesDirectoryPathsWW
DHBinariesFilePathsWWW
	IPrivateTestComponentPackagerWWW4S
IPrivateTestDriverPackagerWW
=IReferenceRedirectionTableEntryW
IdentityReferenceRangeWW
IdReferenceRange(U
bReferenceRedirectionRangeEntryWW
_ConfigurationEvents
8_ResolverTypeConstsWW
cmiDefaultResolverWW
cmiAnswerFileResolverWWWHX
_InstallerEvents
InstallerManagerEntryWWWtY
InstallerWWW
4ICmiLogConfigWWW
GlobalLogListenerWWW
RegisterListener
~4Listener<Z
]CmiLogConfig
0f$cmiInstallerCapabilityNoneWW
&0#rcmiInstallerCapabilityUseSymbolicLinksWW
0cmiInstallerCapabilityReplicateComponentsWWW
cmiInstallerCapabilityRollbackWW
@cmiInstallerCapabilityForceDriversCriticalWW
cmiInstallerCapabilityUnattended
8=?IExcludeReferenceWWW
DefinitionsW0\
6ExcludeReference
ReferenceAnswerW
;InstanceAnswerWW\]
&SimpleIdentityWW$^
UnattendFile
SettingOverrideConflictInformationWW
8n6PrivateTestPackagerTypeConstsWWW
cmiComponentPackagerP_
_PrivateTestPackagerEventsWW
PrivateTestComponentPackager
PrivateTestDriverPackagerWWW|`
4IMigrationContextWWW|`
WorkingDirWW|`
UserName|`
DomainWW|`
ExpandEnvironmentVariablesWW
pEnvironmentVariable|`
CIsCanceledWW|`
SendLogMessageWW
logTypeW
pLogMessageW|`
UserSidStringWWW|`
ReportToUser
priority
%pUserMessage|`
%MapSourceFileLocationWWW
pSourceFilePathW
xBpTargetFilePathW|`
UsersMigratingThisComponentW
1pSourceUserSidStringsWWW
pTargetUserSidStringsWWW|`
0LongRunningPluginWWW|`
\,ResetPluginTimer|`
GetOfflineStatus
lpOfflineExecutionWWW|`
GetOfflineFileLocationWW
'DpOnlineFilePathW
pOfflineFilePath|`
GetOfflineRegistryLocationWW
b_pOnlineRegistryPathW
pOfflineRegistryPath|`
GetOfflineRegistryLocationEx
pOfflineRegistryRootKeyW
@pOfflineRegistrySubkeyWW|`
rSetTelemetryDataPointWWW
pFieldWW
pValueWW
IDiscoveryWW
PerUserSupportWW
qDiscover
.ZpContext
pXmlStreamWW
GatherWWDa
	8YIPreApplyWWWDa
PreApply
IPostApplyWW
ApplySuccess
PostApplyWWWb

8uLIPreGatherWWb
*UPreGatherWWWpb
IPostGatherWpb
qGatherSuccessWWWpb
PostGatherWW
IMigPluginSurrogateW
LoadDllServerWWW
pluginBinaryPath
$YpluginCLSIDW
0$bApartmentThreadingModel
FreeSurrogateWWW
-IsHostAliveWF
Factory which creates instance of various types of objects used by CMI	
IAssemblyW
IIdentityDefinitionWWW
IIdentityReference
IDependencyWWW
IAssemblyDependencyWWW
ICategoryDependencyWWW
ICategoryMembershipWWW
IVersionWW
IRegistryKeyWW
IRegistryValue
IFileW
IXmlSerializer
IRepositoryWWW

IFileComClassW
IFileComInterfaceProxyStub
IFileTypelibWW
IFileWindowClassWW
IConfiguration	
IResolverW
IInstanceFactoryWW
IReferenceFactoryW	
IInstanceW

IReference
IInstanceContextWW
ITargetWWW
IEnvironmentWW
IInstallerManagerW
IGenericCommandWWW
IRegistrationCommandWW
IFileRepositoryWWW
IFileDependencyWWW

IDirecotry
IVariantMapWWW
ICustomInformation
IRepositoryInitializer
IInstallerRegistration
ICmiPairWW
IInstallerSequence
IEventArgumentsWWW
IStringTableEntryW
ILocalizationResources
ILocalizationInformationWW
ICmiSecurityInformationWWW
ISecurityDescriptorDefinitionW
ISecurityDescriptorReferenceWW
IGenericTrusteeWWW

IGroupTrusteeW
IDomainTrustee
ITokenReplacer
IConfigurationAnswerWW
IReferenceAnswerWW
IInstanceAnswerWWW
IInfSerializer
ISysprepInformationWWW
ISysprepModule
IImagingInformationWWW
IInstalledRepositoryWW
IMigrationPatternW
IMigrationInformationW
IMigrationIncludeInformationWW
IMigrationExcludeInformationWW
IMigrationElementInformationWW
IMigrationSupportedComponentWW
IMigrationPluginWW
IRedirectInformationWW
ISimpleIdentityWWW

IUnattendFileW
IComponentSettings
ISettingInstanceWW
ISettingOverrideInstanceWW
IExcludeReferenceW
IRepositorySet
IQualifiedSettingNameW
ISettingInformationWWW
ISettingDefinition#
ISettingOverrideConflictInformationWWW
IIdentityReferenceRangeWWW
IPrivateTestPackagerWW
IFileRepositorySet
IBindingRedirectWW
ICategoryInstanceW

ICmiLogConfigW
IInstrumentationInformationWWW8
Valid object types for ICmiFactory.CreateObject() methodWW3
Creates a new object instance of the specified typeWWW%
Event source interface of ICmiFactoryW#
Event sink interface of ICmiFactoryWWW6
Invoked to post-process the internally created object.#
Registers callback for CreateObjectWWW%
Unregisters callback for CreateObjectW.
Represents a collection of key-and-value pairs%
Returns the value by indexed by a keyW:
Returns the count of key-and-value pairs in the dictionary!
Adds a new item to the dictionaryW.
Removes the specified item from the dictionary%
Removes all items from the dictionaryW"
Returns the enumerator of ICmiPair@
Represents a collection of objects that can be accessed by indexWW
Returns the value indexWWW
Returns the number of valuesWW
Returns an enumerator of valuesWWW,
Adds a new item to the end of the collectionWW.
Removes the specified item from the collection%
Removes all items from the collectionW,
Gets the type of elements in this collectionWW&
Removes an item at the specified index
No namespaceWW 
urn:schemas-microsoft-com:asm.v1WW 
urn:schemas-microsoft-com:asm.v3WW
Different CMI namespacesWW
Returns the CMI namespaceW
Sets the CMI namespace1
Represent four-part partial or full version valueW
return the major version numberWWW
set the major version numberWW
return the minor version numberWWW
set the minor version numberWW
return the build numberWWW
set the build numberWW
return the revision number
set the revision numberWWW
Sets the value of this version(
Returns the string value of this versionWW
Various comparision resultsWWW2
Compares the existing version with another version/
Return whether this is a partial version or notWWW/
Base interface for all extensible CMI interfaceWWW
Returns the object typeWWW!
Gets a list of ICustomInformationW9
Represents custom XML information present in the manifestW!
Returns the type of a custom infoW*
Returns the namespace URI of a custom info'
Sets the namespace URI of a custom infoWWW
Returns the namespace qualifierWWW
Sets the namespace qualifierWW
Returns the local name
Sets the local nameWWW/
Returns the qualifier + localName + instance IdWWW0
Returns the value/outer XML/etc of a custom infoWW-
Sets the value/outer XML/etc of a custom infoW0
Returns the value/inner XML/etc of a custom infoWW-
Sets the value/inner XML/etc of a custom infoW4
Returns the list of attributes as ICustomInformationWW2
Returns the list of elements as ICustomInformation2
Gets the namespace URI for the specified qualifier8
Sets the escaped textual representation for xml elementsWW.
Gets the parent object of a custom information(
type used to uniquely identify componentWW
Returns locale independent nameWWW
Sets locale independent nameWW
Returns four part version valueWWW
Sets four part version valueWW,
Returns the language string or * for neutralWW0
Sets language string (e.g. eng) or * for neutralWW/
Returns processor architecture string, e.g. x86WWW,
Sets processor architecture string, e.g. x86WW0
Returns build type string, e.g. debug or releaseWW-
Sets build type string, e.g. debug or releaseW2
Returns 16-byte public key token for the publisher/
Sets 16-byte public key token for the publisherWWW'
Returns whether this is readonly or notWWW4
Returns the cannoncial string representation of thisWW
Returns the hash code of thisW
Returns type attribute
Sets type attributeWWW
Returns version scope attributeWWW
Sets version scope attributeWW!
Represents an identity definitionW 
Represents an identity referenceWW-
Return whether the identity is partial or notW8
Assign an identity definition to this identity referenceWW
dependency between componentsW+
Returns the description for this dependencyWWW(
Sets the description for this dependencyWWF
Returns the flag indicating whether this dependency is optional or not)
Sets if optional flag for this dependencyW
Returns the discoverable flag.
Sets the discoverable flag.WWW-
Returns the resource type for this dependencyW*
Sets the resource type for this dependency<
Returns whether the dependency is needed for offline installWW9
Sets whether the dependency is needed for offline installW(
Returns the subobject of this dependencyWW9
Represents two values that is associated with each other.W#
Returns the second value in a pair.WWW 
Sets the second value in a pair.WW"
Returns the first value in a pair.
Sets the first value in a pair.WWW!
Represents an assembly dependencyW'
Returns the dependent assembly identityWWW$
Sets the dependent assembly identityWW0
Returns the binding redirects of this dependencyWW3
Returns setting overrides of ISettingInstance type.WWW'
Returns the install for this dependencyWWW$
Sets the install for this dependencyWW/
Returns the dependency type for this dependencyWWW,
Sets the dependency type for this dependencyWW8
component that represents an atomic unit of distributionWW 
Overloads [propget] IAssembly.IdWW
Sets assembly IdWW
Returns the descriptionWWW
Sets descriptionWW
Returns display nameWW
Sets display nameW
Returns company nameWW
Sets company nameW
Returns copyright informationW
Sets copyright information
Returns support informationWWW
Sets support informationWW)
Returns the estimated size of a componentW&
Sets the estimated size of a component
Returns creation timeW
Sets creation time
Returns last update timeWW
Sets last update timeW"
Returns the value of released flag
Sets the value of released flagWWW%
Returns the value of end-of-life flagW"
Sets the value of end-of-life flagI
Returns the number of edits that have happened to this component instanceWF
Sets the number of edits that have happened to this component instance@
Returns a flag indicating whether a component is readonly or notWW%
Gets the manifest resource dependencyW%
Sets the manifest resource dependencyW(
Returns a colon separated list of ownersWW%
Sets a colon separated list of ownersW)
Returns a colon separated list of testersW&
Sets a colon separated list of testers)
Returns a colon separated list of authorsW&
Sets a colon separated list of authors:
Returns comments that are useful for documentation purpose7
Sets comments that are useful for documentation purposeWWWI
Returns a list of setting override references as ISettingOverrideInstanceW.
Returns the collection of category memberships%
Returns list of run-time dependenciesW
Returns the list of filesW
Returns the list of directoriesWWW!
Returns the list of registry keysW+
Returns the list of external COM proxy stubWWW%
Returns the list of generic commands.W*
Returns the list of registration commands.,
Returns the list of installer registrations.WW5
Represents security information define in a componentW
Gets a dictionary of trusteesW4
Gets a dictionary of security descriptor definitionsWW,
Gets the security information of an assemblyWW,
Sets the security information of an assemblyWWD
Gets the fusion activation context inheritance flag for applicationsWWD
Sets the fusion activation context inheritance flag for applicationsWWB
Gets the fusion activation context inheritance flag for assembliesB
Sets the fusion activation context inheritance flag for assemblies#
Represents localization informationWWW-
Returns the fallback culture for the assemblyW*
Sets the fallback culture for the assembly+
Returns the collection of resources elementWWW$
Returns the localization informationWW!
Sets the localization informationW*
Interface to store information for imaging*
Interface to store information for sysprep#
Returns the list of sysprep modulesWWW
Returns the imaging informationWWW
Sets the imaging informationWW.
Specifies migration information of a component)
Represents a pattern for string matching.W*
Returns the name of the file of the plugin'
Sets the name of the file of the pluginWWW"
Returns the class id of the plugin
Sets the class id of the pluginWWW(
Returns the migration plugin informationWW%
Sets the migration plugin informationW.
Returns a list of IMigrationSupportedComponent!
Returns the migration informationW
Sets the migration informationF
Describes the assemblies that should be replaced by the owner assembly@
Returns the list of assembly identities that should be replaced.WW 
Returns the redirect informationWW
Sets the redirect informationW
defaultWWW'
assembly which contains feature elementWWW3
assembly which contains categoryDefinitions elementWWW
Valid component typesW+
Returns the component type of this assemblyWWWB
Returns the collection of assemblies associated with this assembly(
Returns the input source of the assemblyWW%
Sets the input source of the assemblyW>
Provides a mechanism for instrumentation team to keep its data9
Returns the instrumentation information from the assemblyW4
Sets the instrumentation information of the assemblyWW
IBindingRedirect interface
Returns old versionWWW
Sets old versionWW
Returns new versionWWW
Sets new versionWW
category dependencyWWW'
Returns the dependent category identityWWW$
Sets the dependent category identityWW-
valid values of ICategoryDependency.SelectionW&
Returns the type of category selection#
Sets the type of category selectionWWW!
Returns the type name of categoryW
Sets the type name of category
Represents category membership
Returns the category identityW
Sets the category identity&
Returns the list of category instances
Represents category instanceWW,
Returns the subcategory of category instanceWW)
Sets the subcategory of category instanceW-
Returns the display name of category instanceW*
Sets the display name of category instance,
Returns the description of category instanceWW)
Sets the description of category instanceW/
Returns the subobject of this category instanceWWW!
Represents a generic file elementW+
Returns the base64 encoded hash of the fileWWW(
Sets the base64 encoded hash of the fileWW/
Returns the algorithm used to generate the hashWWW,
Sets the algorithm used to generate the hashWW"
Returns the destination file name.
Sets the destination file name.WWW
Returns the destination pathWW
Sets the destination pathW
Returns source nameWWW
Sets source nameWW
Returns the source pathWWW
Sets the source pathWW
Returns the file sizeW
Sets the file size0
Returns the COM classes implemented in this fileWW4
Returns the COM proxy stubs implemented in this fileWW.
Returns the COM typelibs embedded in this file3
Returns the window classes implemented in this fileWWW&
Returns the dependencies of this file.E
Returns the path of a file when the owning assembly is being importedWB
Sets the path of a file when the owning assembly is being imported/
Represents a reference to a security definitionWWW0
Gets the name of a security descriptor referenceWW0
Sets the name of a security descriptor referenceWW
Gets the parent object or nullY
Gets the boolean flag indicating if the security descriptor reference is for offline modeWY
Sets the boolean flag indicating if the security descriptor reference is for offline modeW0
Gets the security descriptor reference of a fileWW0
Sets the security descriptor reference of a fileWW6
Returns whether to create default value during install3
Sets whether to create default value during installWWW0
Use the same actions as parent element or objectWW/
Migrate using default conflict resolution rulesWWW

Don't migrateW1
Migrate and overwrite the destination with sourceW?
Migrate only if element or object is missing on the destinationWWW-
Migrate and rename if a collision is detectedW
Valid migration typesW
Returns the migration type
Sets the migration typeWWW
Returns the file attributesWWW
Sets the file attributesWW
Ignore compression processingW
COMPRESSION_FORMAT_NONEWWW
COMPRESSION_FORMAT_DEFAULT
COMPRESSION_FORMAT_LZNT1WW
Valid file compression type.WW!
Returns the file compression typeW
Sets the file compression type=
systemData type, file contents can change during installationW<
static type, file contents do not change during installationWW
Valid writeable types.
Returns the file writeable typeWWW
Sets the file writeable typeWW!
Specifies a COM class informationW
Sets the descriptionWW
Returns the program ID
Set the program ID
Returns the class IDWW
Sets the class IDW
Returns the threading modelWWW
Sets the threading modelWW
Returns the typelib ID
Sets the typelib IDWWW$
Specifies a COM interface proxy stubWW
Returns nameWW	
Sets nameW
Returns the interface IDWW
Sets the interface IDW
Returns the tybelib ID5
Returns the number of methods, or -1 if not specifiedW2
Sets the number of methods, or -1 if not specified
Returns the proxy stub class IdWWW
Sets the proxy stub class IdWW
Returns the base interface nameWWW
Sets the base interface nameWW
Returns the textWW

Sets the textW
Specifies a COM typelibWWW
Returns the versionWWW
Sets the versionWW
Returns the help directory
Sets the help directoryWWW
Returns the resource IDWWW
Sets the resource IDWW
Returns the typelib flagsW
Sets the typelib flags
Specifies a Windows classW&
Returns whether it is versioned or not#
Sets whether it is versioned or notWWW
Returns the valueW
Sets the value
Represents regisry key
Returns the key nameWW
Sets the key nameW
Returns if it is the key owner
Sets the key owner-
Returns the read-only list of registry valuesW8
Gets the security descriptor reference of a registry keyWW8
Sets the security descriptor reference of a registry keyWW1
Represents element specific migration informationW!
Specifies elements to be includedW#
Returns a list of IMigrationPatternWWW:
Returns information about what to include during migration7
Sets information about what to include during migrationWWW!
Specifies elements to be excludedW:
Returns information about what to exclude during migration7
Sets information about what to exclude during migrationWWW0
Gets the migration information of a registry keyWW0
Sets the migration information of a registry keyWW!
Gets the parent of a registry keyW)
Returns the per user virtualization valueW&
Sets the per user virtualization value
Returns the map access valueWW
Sets the map access valueW
Represents registry valueW
Defines registry value types.W
Returns the typeWW
Returns the DataWW
Sets the registry valueWWW
Returns the ownership flag.WWW
Sets the ownership flag.WW
Default value.
Replace existing value.WWW
Append to existing value.W
Prepend to existing value.$
Operation hints for registry values.WW
Returns the operation hint.WWW
Sets the operation hint.WW$
Gets the parent object of this valueWWS
Describes a generic command which needs to be executed as part of the installation.WWWO
Returns the fully qualified path to the execuable relative to component's root.WWWL
Sets the fully qualified path to the execuable relative to component's root.WW)
Returns the arguments for the executable.W&
Sets the arguments for the executable.H
Returns the flag that specifies if this command must run during install.WWE
Sets the flag that specifies if this command must run during install.WC
Returns the installation passes during which this command must run.WWW@
Sets the installation passes during which this command must run.WW/
Indicates that success is when return code is 0WWW9
Indicates that success is when return code is less than 0W<
Indicates that success is when return code is greater than 0WWE
Indicates that success is when return code is less than or equal to 0WH
Indicates that success is when return code is greater than or equal to 0WW
Various success codesW4
Returns the success code for the generic command to.WW.
Sets the success code for the generic command.N
Describes the files that need to be registered after the installation is done.3
Returns the fully qualified path to the executable.WWW0
Sets the fully qualified path to the executable.WW+
Returns the arguments for the registration.WWW(
Sets the arguments for the registration.WW.
Returns the arguments for the un-registration.+
Sets the arguments for the un-registration.WWW0
Returns the timeout for registration in seconds.WW-
Sets the timeout for registration in seconds.W
Install propertyWW
Register propertyW9
Stage pass, which can happen in offline or online installW6
Bootstrapping pass, which can happen in online install/
Online pass, which can happen in online installWWW6
Configuration pass, which can happen in online install3
Generalize pass, which can happen in online installWWW3
Specialize pass, which can happen in online installWWW0
Cleanup pass, which can happen in online installWW9
Re-configuration pass, which can happen in online installW@
Second stage pass, which can happen in offline or online installWW"
Possible passes in an installationE
Returns the installation pass during which registration is to be run.WB
Sets the installation pass during which registration is to be run.H
Returns the installation pass during which un-registration is to be run.WWE
Sets the installation pass during which un-registration is to be run.W
Represents a file dependency.W/
Returns the source name of the dependency file.WWW,
Sets the source name of the dependency file.WW-
Returns the fully qualified path to the file.W*
Sets the fully qualified path to the file.$
Returns the unique hash of the file.WW!
Sets the unique hash of the file.W/
Returns the algorithm used to compute the hash.WWW,
Sets the algorithm used to compute the hash.WW+
Returns if a dependency is optional or not.WWW(
Sets if a dependency is optional or not.WW-
Returns the runtime path of a dependency fileW*
Sets the runtime path of a dependency file-
Returns the runtime name of a dependency fileW*
Sets the runtime name of a dependency file0
Represents a definition of a security descriptorWW1
Gets the name of a security descriptor definitionW1
Sets the name of a security descriptor definitionW1
Gets the SDDL of a security descriptor definitionW1
Sets the SDDL of a security descriptor definitionW;
Gets the operation hint of a security descriptor definitionWWW;
Sets the operation hint of a security descriptor definitionWWW9
Gets the display name of a security descriptor definitionW9
Sets the display name of a security descriptor definitionW8
Gets the description of a security descriptor definitionWW8
Sets the description of a security descriptor definitionWW0
Provides information common to all trustee typesWW
Gets the name of a trustee
Sets the name of a trustee
Gets the full name of a trusteeWWW
Sets the full name of a trusteeWWW!
Gets the description of a trusteeW!
Sets the description of a trusteeW
Gets the sid of a trusteeW
Sets the sid of a trusteeW
SidTypeUserWWW
SidTypeGroupWW

SidTypeDomainW
SidTypeAliasWW
SidTypeWellKnownGroupW
SidTypeDeleteAccountWW
SidTypeInvalid
SidTypeUnknown
SidTypeComputerWWW
SidTypeAccount
SidTypeVirtualAccountW<
Possible types of trustee, defined in ntseapi.h SID_NAME_USEWW
Gets the trustee typeW
Sets the trustee typeW(
Gets whether a trustee is enabled or notWW(
Sets whether a trustee is enabled or notWW/
Gets a list of privileges assigned to a trusteeWWW/
Sets a list of privileges assigned to a trusteeWWW)
Provides information of a generic trusteeW
Gets the owner of a trusteeWWW
Sets the owner of a trusteeWWW'
Provides information of a group trusteeWWW)
Gets a list of members of a group trusteeW)
Sets a list of members of a group trusteeW.
Gets a list of capabilities of a group trustee.
Sets a list of capabilities of a group trustee(
Provides information of a domain trusteeWW*
Gets a list of members of a domain trustee*
Sets a list of members of a domain trustee)
Represents a serializer and de-serializerW/
Deserializes a CMI object from the given sourceWWW0
Serializes a CMI object to the given destinationWW.
Represents an INF serializer and de-serializer8
Returns the search paths of infs used by this serializerWW4
Sets the search path of infs used by this serializerWWB
Returns the processor architecture of infs used by this serializerD
Sets the processor architecture path of infs used by this serializerWW2
Gets the flags that control serialization behavior2
Sets the flags that control serialization behavior&
Returns the class-public key token map=
Represents a store of metadata and data (files) of componentsW+
Returns connection string to the repositoryWWW 
4 part version of the repositoryWW6
Returns identities of all assemblies in the repository2
Returns the requested assembly from the repositoryF
Checks whether the given component is present in the repository or not+
Removes the given component from repositoryWWW0
Get category memberships declared by a componentWW
Get members of a categoryW
Get all components of a typeWW!
Get a component given an identityW
Get dependencies of a componentWWW/
Get Identities of the dependents of a componentWWW 
Get all the identities of a typeWWJ
Get a list of components in the same order as the input list of identities$
Get a all identities in the databaseWW4
Get the custom information specified for a componentWWP
Get the list of identities filtered based on the first level identity attributesWW?
Get the identities or components that contain a particular fileWWW:
Get the identities to which a given identity is redirected2
Get the setting overrides specified in a component9
Given a setting definition find all the setting overridesW5
Given a setting definition find the setting type nameWA
Given a setting definition find the default value for the settingWU
Given a setting name, find all components that have a setting definition by this nameWT
Given a setting type name, find all components that use this setting definition typeWW4
Given a setting definition find out if it is securedWW9
Get all the secured setting definitions across componentsWC
Get all setting definitions that have a particular visibility levelWWWR
Get the identities or components that contain a file with a particular source name
Different types of queries<
Creates and returns the requested query object, if supportedWW1
Creates and returns a bulk importer, if supportedW0
Different types of access modes for a repositoryWW/
Different types of share modes for a repositoryWWW+
opens the repository for reading or writingWWW
closes the repositoryW
Represents a file repositoryWW
Returns the display nameWW
Sets the display nameW
Returns the root pathW.
Open the repository at the specified root path
Close the repositoryWW#
Move the repository to the new rootWWW-
Imports all the files for the given componentW(
Exports the files for the given identityWW_
Gets the fully qualified file name or manifest name for the given file of a component identity.WWWU
Returns the collection of identities of the components present in the file repositoryWH
Indicates whether the component is present in the file repository or notWW6
Removes the files of the component from the repository6
Removes all the files of the components the repository+
Identifies the default CMI file repository.WWW%
Identifies the media file repository.W;
Defines the types of file repositories that can be created.WWW;
Returns the type of file repository this object implements.WWWV
Gets the fully qualified file name or manifest name for the given file of a component."
Returns a repository import object=
Returns the file repositories associated with this repositoryW7
Returns the file repository associated with a componentWWW
BeginTransaction methodWWW
CommitTransaction methodWW
RollbackTransaction method
Rebase file repository
GetFileRepositoryObject method&
Returns the INF file search repository#
Sets the INF file search repositoryWWW%
Gets the import path for binary filesW%
Sets the import path for binary filesW%
Gets the import path for the INF fileW%
Sets the import path for the INF fileW.
Represents an XML serializer and de-serializer8
Returns whether to omit xml declaration during serializeWW5
Sets whether to omit xml declaration during serializeW=
Returns whether to write the byte order mark during serializeW:
Sets whether to write the byte order mark during serialize
UTF-8 encoding
UTF-16 encodingWWW%
Encodings supported by XML serializerWA
Returns the encoding (UTF-8/ UTF-16) to be used for serializationW>
Sets the encoding (UTF-8/ UTF-16) to be used for serialization1
Interface to store information for sysprep moduleW
Returns the name of the module
Sets the module nameWW6
Returns the installation pass installer should perform3
Sets the installation pass installer should performWWW
Represents queryWW
Returns the current query type
Sets the current query flagsWW
Returns the current query flagsWWW$
Returns the current query parametersWW!
Sets the current query parametersW
Executes the query and returns9
This interface allows metadata repository initialization.W)
Creates and initializes a new repository.W<
Completely deletes the specified repository from the system.WW+
Interface to replace tokens in the manifestWWW
Gets the factoryWW
Sets the factoryWW=
Replaces the tokens for the given object & returns new objectW:
Interface to replace user specified tokens in the manifest*
Represents a set of environment variables.:
Returns the value of the variable with the specified name.7
Sets the value of the variable with the specified name.WWW,
Returns the count entries in the environmentWW-
Removes all environment variable definitions.W*
Expands environment variables in a string.)
Returns an enumerator of name value pairsW
Returns the replacement tokens
Sets the replacement tokensWWWA
Interface to replace tokens in a manifest using resource manfiestW
Returns the repository
Sets the installed repositoryW
Returns the language stringWWW
Sets language stringWW/
Returns the array of fallback languages stringsWWW,
Sets the array of fallback languages stringsWW%
Returns the string value for matchingW"
Sets the string value for matchingD
Specifies information about a component which migration is supportedWW0
Returns the identity of the supported component.WW-
Sets the identity of the supported component.W1
Represents read-only view of a setting definitionWC
Returns the list of setting definitions, each as ISettingDefinitionWWW=
Returns the list of setting types, each as ICustomInformationW%
Returns the setting information valueW"
Sets the setting information value-
Returns the visibility attribute of a settingW*
Returns the secured attribute of a setting"
Returns the type name of a setting
Represents a setting instanceW
Returns the name this settingW
Sets the name this setting3
Returns whether UI should be shown for this settingWWW0
Sets whether UI should be shown for this settingWW!
Returns the value of this settingW
Sets the value of this settingsWWW'
Merge another setting with this settingWWW&
Returns the default value of a settingD
Associates a setting with the component to which the setting appliesWW=
Returns the identity of the component to apply the setting toW:
Sets the identity of the component to apply the setting toH
Associates an setting name with a component to which the setting appliesWW-
Returns the identity that qualifies a settingW*
Sets the identity that qualifies a setting
Returns the name of a settingW
Sets the name of a settingB
Provides IInstaller::Install call sequence of a list of installers3
Gets the installation pass this sequence applies toWWW3
Sets the installation pass this sequence applies toWWW:
Gets the installer that this sequence needs to be ahead of:
Sets the installer that this sequence needs to be ahead of5
Gets the installer that this sequence needs to followW5
Sets the installer that this sequence needs to followW2
Gets the array of paths that defines this sequence2
Sets the array of paths that defines this sequence1
Provides registration information about installerW*
Gets the class ID of the installer factory*
Sets the class ID of the installer factory5
Gets the map of installer ID and the InstallationPassW6
Gets the list of IInstallerSequences of the installers9
Gets the list of supported target processor architecturesW9
Sets the list of supported target processor architecturesW8
Gets the supported combination of InstallationTypeConstsWW8
Sets the supported combination of InstallationTypeConstsWW
Event interface for CMIWWW
Event argumentsWWW&
Gets the event ID for the event posted,
Sets the event ID for the event to be postedWW$
Gets the object for the event postedWW*
Sets the object for the event to be posted2
Gets the additional arguments for the event posted8
Sets the additional arguments for the event to be postedWWE
Gets the HRESULT from the event handler for the event that was postedW.
Sets the HRESULT for the event that was posted!
Posts an event to the subscribersW-
Represents a string entry in the string tableW
Gets the identifierWWW
Gets the value/
Represents localization resources for a cultureWWW%
Returns the culture for the resourcesW!
Sets the culture for the assemblyW
Returns the string tableWW%
Useful constant for the default valueW
FILE_ATTRIBUTE_READONLYWWW
FILE_ATTRIBUTE_HIDDENW
FILE_ATTRIBUTE_SYSTEMW
FILE_ATTRIBUTE_ARCHIVE
FILE_ATTRIBUTE_TEMPORARYWW
FILE_ATTRIBUTE_SPARSE_FILE"
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED7
Win32 file attribute that can be represented as a flag.WWW
Flags for IFileTypelib.FlagsWW?
An empty directory that need to be created during installation.WWW?
Returns the fully qalified name for creating an empty directoryWWW<
Sets the fully qalified name for creating an empty directoryWW;
Returns whether the containing assembly owns this directoryWWW8
Sets whether the containing assembly owns this directoryWW5
Gets the security descriptor reference of a directoryW5
Sets the security descriptor reference of a directoryW0
Returns the migration information of a directoryWW-
Sets the migration information of a directoryW7
Marks external files with the external custom attributeWWWA
Converts only internal files and ignores Include/Needs directivesWQ
Forces processing of un-decorated models sections even if decorations are presentW0
Converts only the identity of the driver packageWW)
Forces conversion of all registry entriesW
Treat the INF file as inboxWWW
Process ExcludeId directivesWW0
Generate PnP info during a no-install conversionWW.
Flags that control the inf serializer behaviorD
Keep the connection open to the data sources and read data on demandWW.
Read all data and disconnect from data sourcesK
Fetch the complete information regarding the objects that are being queriedWWWL
Fetch only the first level information of the objects that are being queriedWW?
Flags that control the caching and fetching policies of a queryWWW
Represents Bulk Import$
Returns manifest file search patternWW!
Sets manifest file search patternW
Returns batch commit sizeW
Sets batch commit size
Returns maximum disk file size
Sets maximum disk file sizeWWW
Returns the file repositoryWWW
Sets the file repositoryWW
Returns the temporary directoryWWW
Sets the temporary directoryWW,
Returns the current setting for transactionsWW"
Sets the batch transaction setting
Executes the bulk importWW"
Events interface for bulk importer"
Exposes file repository properties
Returns the repository flagsWW
Sets the repository flagsW 
Use symbolic links while copyingWW-
Skip the file if it is present in destinationWQ
Return an error when importing a component already present in the file repositoryWL
Skip missing files if the external attribute is set during import and exportWW=
Use alternate setup policy location in fusion file repositoryW>
Always serialize component manifest while importing components1
Ignore missing catalog files in driver componentsW
Do not clean up if import failsWWW+
Flags that control file repository behaviorWWW
IFileRepositorySet interfaceWW
FileRepositories propertyW.
Use file system and have limited query support*
Use a file-based repository implementation9
Types of repositories. Used while creating the repositoryW
Types of installation.%
Valid events that CMI objects supportW
Generic token replacer typeWWW%
Manifest resource token replacer typeW"
Different types of token replacers
SE_CREATE_TOKEN_PRIVILEGEW
SE_ASSIGNPRIMARYTOKEN_PRIVILEGEWWW
SE_LOCK_MEMORY_PRIVILEGEWW
SE_INCREASE_QUOTA_PRIVILEGEWWW
SE_UNSOLICITED_INPUT_PRIVILEGE
SE_MACHINE_ACCOUNT_PRIVILEGEWW
SE_TCB_PRIVILEGEWW
SE_SECURITY_PRIVILEGEW
SE_TAKE_OWNERSHIP_PRIVILEGEWWW
SE_LOAD_DRIVER_PRIVILEGEWW
SE_SYSTEM_PROFILE_PRIVILEGEWWW
SE_SYSTEMTIME_PRIVILEGEWWW 
SE_PROF_SINGLE_PROCESS_PRIVILEGEWW
SE_INC_BASE_PRIORITY_PRIVILEGE
SE_CREATE_PAGEFILE_PRIVILEGEWW
SE_CREATE_PERMANENT_PRIVILEGEW
SE_BACKUP_PRIVILEGEWWW
SE_RESTORE_PRIVILEGEWW
SE_SHUTDOWN_PRIVILEGEW
SE_DEBUG_PRIVILEGE
SE_AUDIT_PRIVILEGE
SE_SYSTEM_ENVIRONMENT_PRIVILEGEWWW
SE_CHANGE_NOTIFY_PRIVILEGE
SE_REMOTE_SHUTDOWN_PRIVILEGEWW
SE_UNDOCK_PRIVILEGEWWW
SE_SYNC_AGENT_PRIVILEGEWWW
SE_ENABLE_DELEGATION_PRIVILEGE
SE_MANAGE_VOLUME_PRIVILEGE
SE_IMPERSONATE_PRIVILEGEWW
SE_CREATE_GLOBAL_PRIVILEGE
SE_INTERACTIVE_LOGON_NAMEW
SE_NETWORK_LOGON_NAMEW
SE_BATCH_LOGON_NAMEWWW
SE_SERVICE_LOGON_NAMEW
SE_DENY_INTERACTIVE_LOGON_NAME
SE_DENY_NETWORK_LOGON_NAME
SE_DENY_BATCH_LOGON_NAMEWW
SE_DENY_SERVICE_LOGON_NAME 
SE_REMOTE_INTERACTIVE_LOGON_NAMEWW%
SE_DENY_REMOTE_INTERACTIVE_LOGON_NAMEW1
Possible types of privilege, defined in ntseapi.hW 
Represents a set of repositoriesWW 
Returns the list of repositoriesWW4
Represent an instance of IDependency or ICompositionWW(
Returns the definition of this referenceWW%
Sets the definition of this referenceW(
Resolution of a reference is not startedWW
Waiting for selectionW
Selection is doneW'
Child instances are not fully resolved.WWWJ
Resolution has been deferred to actual instance to avoid cyclic references*
Resolution done and meets the constraints..
Different types of reference resolution status/
Returns the resolution status of this referenceWWW,
Sets the resolution status of this referenceWW
Resolve at design time
Resolve at runtime$
Different types of resolution stagesWW.
Returns the resolution stage of this reference+
Sets the resolution stage of this referenceWWW
Returns the resolver identityW
Sets the resolver identity*
Returns if this instance is enabled or not'
Sets if this instance is enbaled or notWWW'
Represents an instance of an IComponentWWW1
Returns the component which defines this instanceW%
Returns the identity of the componentW"
Sets the identity of the component7
Returns the collection of reference in of this instanceWWW
UserWW
ResolverWW9
possible entities that add an instance to a configurationW<
Returns the entity who adds this instance to a configurationWW9
Sets the entity who adds this instance to a configurationW<
Returns the readonly collection of references to an instanceWW7
Represents both a root reference and a resolver contextWWW*
Returns the identity of this configuration'
Sets the identity of this configurationWWW1
Returns the read only collection of all instancesW
Sets the repositoryWWW/
Implement by client to provide return instancesWWW,
Gets the factory used by an instance factoryWW,
Sets the factory used by an instance factoryWW
Reference factory interfaceWWW0
Returns the factory used by an reference factoryWW-
Sets the factory used by an reference factoryW
Create identity referenceW
Create dependency referenceWWW7
Create an instance of the component of the specified IdWWW8
Sets the repository to be used with the instance factoryWW
Returns the instance factoryWW
Sets the instance factoryW
Returns the reference factoryW
Sets the reference factory&
Represent an resolver of IReference(s)%
Returns the identity of this resolverW
Resolve a referenceWWW&
Returns the arguments to this resolver#
Sets the arguments to this resolverWWW
Returns the resolverWW
Sets the resolverW1
Merge another configuration to this configurationW4
Reset the resolution status of a reference's parentsWW,
all the overrides and the default are mergedWW;
all the overrides only are merged, but not with the defaultWWW8
possible filter in the computation of effective settingsWW'
Computes the effective setting settingsWWW=
Returns if conflicting overrides are applied to this instanceW5
Returns the most recently computed override conflictsW<
Returns the edit sequence when AllInstances is last modifiedWW*
Represents the reference redirection tableK
Returns the read-only redirection table view from the reference range indexWWWD
Returns the read-only redirection table view from the instance indexWW
Represents range of referencesD
Sets the reference identity which includes the from version by valueWW>
Returns the reference identity which includes the from version&
Sets upper bound for the version range)
Returns upper bound for the version rangeW&
Adds an entry to the redirection tableC
Removes an entry from the redirection table using a reference rangeWWWE
Removes entries from the redirection table using an instance identityWE
Removes entries from the redirection table using a reference identityWC
Indicates that the reference redirection table has been initializedWWW'
Returns the reference redirection tableWWWX
Creates reference redirection table based on the lower and upper version offset providedWW;
Resolve each language-specific dependency to zero componentWWW:
Resolve each language-specific dependency to one component>
Resolve each language-specific dependency to based on langpackC
Resolve each language-specific dependency to all matched componentsWWW"
Types of language resolution modes1
Gets the LanguageMode for resolving configurationW1
Sets the LanguageMode for resolving configurationW
Resolve all the dependenciesWWA
Resolve only compositional dependencies and language dependenciesW'
Types of configuration resolution modesWWW3
Gets the ResolutionMode for resolving configurationWWW3
Sets the ResolutionMode for resolving configurationWWW5
Returns the configuration an instance is contained inW*
Selects element based on a path expression.
Returns the installation status of an instance
IInstallContext interfaceW!
Represents an installation targetW"
Represents an installed repository4
Returns the configuration of an installed repositoryWW1
Returns the root path of the installed repositoryW"
Returns the installed repository .
Sets the installed repository .WWW3
Returns the collection of installable repositories.WWW%
Returns the environment variable set.W"
Sets the environment variable set.,
Returns the online environment variable set.WW)
Sets the online environment variable set.W
Target propertyWWWR
This interface manages the association between installable objects and installers.6
This interface allows creation of installer instances.:
This interface allows installing and uninstalling objects.
Installs an object.WWW
Uninstalls an object.W8
Creates an installer instance for the specified element.WW<
Registers an installer factory using IInstallerRegistration.WWG
Returns the installer associated with the specified installable object.WWWO
Resolves the installer for the specified object and invokes its install method.WWWQ
Resolves the installer for the specified object and invokes its uninstall method.W>
Returns the current installer associated with the element nameD
Returns the list of installer paths ordered by Install call sequenceWW=
This interface allows access to an entry in IInstallerManagerW!
Gets the installer id of an entryW+
Gets the installer registration of an entryWWW
Public installerWW
Private installerW
Stock installerWWW
Different types of installersW
Gets the installer typeWWWL
Return an installer registration entry in installer manager by element name.WW
InstallerManager propertyW
InstallationType propertyW
CurrentInstance propertyWW
FileRepositorySet property
Factory propertyWW+
Returns the current pass of an installationWWW(
Sets the current pass of an installationWW<
Returns the processor architecture installers are running onWW9
Sets the processor architecture installers are running onW5
Returns the processor architecture the target runs onW2
Sets the processor architecture the target runs on-
Returns the offline installer file repositoryW*
Sets the offline installer file repository*
Returns the optional passes to turn on/off'
Sets the optional passes to turn on/offWWW
No reboot is requiredW
Reboot is recommendedW
Reboot is required)
possible set of values to indicate rebootW
Returns the reboot indicatorWW
Sets the reboot indicatorWD
Sets up the internal environment object for the specified setup typeWW(
Gets installer capability flags propertyWW(
Sets installer capability flags propertyWW)
Represents a listener to logging from CMIW
NoneWW
ErrorW
Error and WarningW
Error, Warning and InfoWWW
Error, Warning, Info and Trace(
possible levels of verbosity for loggingWW6
Returns the maximum verbosity level of log to receive..
Returns the log from which modules to receive.1
Returns the log from which facilities to receive.W1
modules that do not fall into the following itemsW
main libraryWW
utility toolWW"
installer for ACL and user account%
installer for PnP drivers and devicesW
installer for sysprepW'
installer for catalogs and certificatesWWW 
installer for managed componentsWW
installer for settings
installer for localized driversWWW
possible modules for loggingWW>
functionalities that do not fall into the following categories
manages core object modelW*
performs conversion between object and xml*
performs conversion between object and inf+
stores and manages components in repositoryWWW
updates configurationW
performs dependency resolution
performs setup of componentsWW+
possible functionalities in CMI for loggingWWW@
Receives log. Prefix Cmi to avoid conflict with logging in SetupWW
Gets log listener property+
Returns the replicated repository root pathWWW(
Sets the replicated repository root pathWW:
Returns the previously installed instance during servicing7
Sets the previously installed instance during servicingWWW:
Gets the file repository containing the specified instance/
Returns if the installation is using cmiadapterWWW-
Sets if this installation is using cmiadapterW`
Returns the component which defines this instance with all language-specific tokens substituted.WWC
Selects elements from a specified object based on a path expressionWWW8
Returns the default setting instances from the componentWW>
Returns the most recently computed effective setting instances>
Returns the user specified setting overrides for this instanceN
Returns the edit sequence when ComputeEffectiveSettingInstances is last called#
Flushes internally cached componentWWW-
Flushes internally cached localized componentW9
Returns if Component has element(s) of the specified pathW7
Returns the parent instance of this resolution, or NULLWWWE
Returns the collection of instance identities available for selectionW6
Returns the maximum number of instances need to select3
Sets the maximum number of instances need to selectWWW6
Returns the minimum number of instances need to select3
Sets the minimum number of instances need to selectWWW6
Returns the collection of instance identities selected,
Returns the collection of selected instancesWW
Implemented by wrappers of CMI objects. Applicable only for those CMI objects which rely on internal interface rather than public interface for their implementationWW8
This interface allows upgrading and downgrading objects.WW
Upgrades an object.WWW
Downgrades an object.W*
Types of path supported by IPathTranslator&
Represents a configuration answer file9
Returns value for initializing other id in an answer fileW6
Sets value for initializing other id in an answer file2
Returns a list of IIdentity of top level instances"
Returns a list of IReferenceAnswer!
Returns a list of IInstanceAnswerW@
Returns the id for a configuration generated by this answer fileWW=
Sets the id for a configuration generated by this answer fileW
ExcludeReferences property
ExcludeComponents property$
ExcludeOptionalDependencies propertyWW
ExcludeWow64Components propertyWWW@
Represents data required for automatic resolution of a referenceWW%
Returns the definition of a referenceW"
Sets the definition of a reference7
Returns the identity of a parent or NULL for any parentWWW4
Sets the identity of a parent or NULL for any parentWW1
Represents data required to customize an instanceW$
Returns the identity of the instanceWW!
Sets the identity of the instanceW)
Returns if the instance is enabled or notW&
Sets if the instance is enbaled or notB
Used to identify component from unattend file to instance identity
Returns the component language
Sets the component languageWWW8
Interface to specify component settings in unattend fileWW,
Returns the simple identity of the componentWW)
Sets the simple identity of the componentW0
Returns a list setting instances for a componentWW6
Interface to specify unattend file recognizable to cmi$
Returns a list of component settingsWW(
Returns a list of components to be addedWW*
Returns a list of components to be removed+
Returns a list of components to be replacedWWW-
Applies this unattend file to a configurationW)
Levels of validation for an unattend fileW4
Validates this unattend file against a configurationWWB
Sets configuration answer file that overrides an unattend.xml fileB
Gets configuration answer file that overrides an unattend.xml file<
Applies the redirections from unattend file to configurationWW:
Computes effective changes without performing installation;
Information for resolving conflict in overridding a settingWWW2
Returns the component where the setting is defined/
Sets the component where the setting is definedWWW-
Returns the IIdentity to ISettingInstance mapW0
Represents private test packagers for componentsWW 
Sets file repository for packageWW#
Returns file repository for packageWWW
Sets repository for packagerWW
Returns repository for packagerWWW.
Sets environment to expand paths during import1
Returns environment to expand paths during importWF
Packages components using the binaries and component carriers provided<
Represents a private test packager for non-driver componentsWW8
Represents a private test packager for driver componentsWW6
Represents an entry in the reference redirection table!
Sets the identity reference rangeW$
Returns the identity reference rangeWW
Sets the instance identity
Returns the instance identityW#
Sets if the entry is enabled or notWWW&
Returns if the entry is enabled or not"
Events interface for configuration:
Relies on client inputs for non-deterministic resolutions.'
Uses an answer file to help resolution.WWW4
Types of resolvers. Used while creating the resolverWW
Events interface for installer'
Represents a log configuration from CMIWWW
Sets the global log listener.W5
Registers a log listener under a specified unique keyW#
default installer capabilities flagWWW(
use symbolic links for file installationWW7
replicate source components to target source repositoryWWW:
rollback operations if they are supported by the installer'
treat all driver components as criticalWWW
use unattend installationW
Installer capabilities flagsWW
IExcludeDependency interfaceWW
Parent propertyWWW
Definition propertyWWW
Packages non-Driver components?
Types of packagers. Used while creating a private test packagerWWW*
Events interface for private test packagerA
IMigrationContext Interface provides migration context to pluginsW
property WorkingDirWWW
property UserNameW
property DomainWWW!
method ExpandEnvironmentVariablesW
method IsCanceledW
method SendLogMessageW
property UserSidString
method ReportToUserWWW
method MapSourceFileLocationWW"
method UsersMigratingThisComponent
method LongRunningPluginWW
method ResetPluginTimerWWW
method GetOfflineStatusWWW
method GetOfflineFileLocationW!
method GetOfflineRegistryLocationW#
method GetOfflineRegistryLocationExWWW
method SetTelemetryDataPointWW
IDiscovery InterfaceWW
property PerUserSupportWWW
method DiscoverWWW

method GatherW
IPreApply InterfaceWWW
method PreApplyWWW
IPostApply InterfaceWW
method PostApplyWW
method FinalizeWWW
IPreGather InterfaceWW
method PreGatherWW
IPostGather InterfaceW
method PostGatherWC
IMigPluginSurrogate interface for migration plugins sandboxing onlyWWW
method LoadDllServerWW
method FreeSurrogateWW
method IsHostAlive
+`P
(`|,
'pD8
Ipp
\p|:
(p@<
1p =
-`lV
,`T5
bp\[
"`H_
Hp|^
AplV
Vp\m
hp0r
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<assembly
    xmlns="urn:schemas-microsoft-com:asm.v1"
    manifestVersion="1.0"
    >
    <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
        <application>
            <!--This Id value indicates the application supports Windows Vista/Server 2008 functionality -->
            <supportedOS Id="{e2011457-1546-43c5-a5fe-008deee3d3f0}"/>
            <!--This Id value indicates the application supports Windows 7/Server 2008 R2 functionality-->
            <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
            <!--This Id value indicates the application supports Windows 8/Server 2012 functionality-->
            <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
            <!-- This Id value indicates the application supports Windows Blue/Server 2012 R2 functionality-->
            <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
            <!-- This Id value indicates the application supports Windows Threshold functionality-->
            <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
        </application>
    </compatibility>
    <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
        <security>
            <requestedPrivileges>
                <requestedExecutionLevel
                    level="asInvoker"
                    uiAccess="false"
                />
            </requestedPrivileges>
        </security>
    </trustInfo>
</assembly>

N0L0
010

XaU

10	

Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110

190502212436Z

200502212436Z0p10	

Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
]~e
}bgk#!F
\CHx
NMD6
T`7;
HA1o7w
I0G1-0+
$Microsoft Ireland Operations Limited1

229879+4541120
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
TroW
7 1]
^xLD
,?2+
L+x`r
fF+;
10	

Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100

111019184142Z

261019185142Z0
10	

Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
-|by
;S5|
%(\6
[*	k"
h	sD]}
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0

1Fay
8.Ek
L
6fj
@26v
TlP0X
R!s4Z
s9_>
10	

Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
UM>*
1.,99InrospRQNmChHSG4LZKNRGFbAt7p8Jq4zRZ3G+Gb4=0Z
1L0J
 http://www.microsoft.com/windows0

010

9b?kB
20190924074119.204Z0
10	
US10	
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:0842-4BE6-C29A1%0#
Microsoft Time-Stamp service
0|10	

Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100

180823202651Z

191123202651Z0
10	
US10	
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:0842-4BE6-C29A1%0#
Microsoft Time-Stamp service0
MRR-uC
1T^$
}2[4

> 
Y?Ou
y,t2
Qtu
C{|F
mU0V
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
;2w|
>R0w
"a*"R
"bJo
\&7u

a	*
10	

Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100

100701213655Z

250701214655Z0|10	

Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
|hK,_
>f+[
|a0Y
s0W&
$`2X`F
BM@Q
z*
1
C{|F
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
$VKt
7}Z?
oK0D$"<
Jqc{!m
~cY%
z.9Wv
r~akow
/T'!
10	
US10	
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:0842-4BE6-C29A1%0#
Microsoft Time-Stamp service
Y`+"
~0|10	

Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100

41X0"
20190924140824Z
20190925140824Z0w0=
1/0-0

1(0&0
0|10	

Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
~0|10	

Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
kR/0

A;p;
?t>Y
)6sU
QVE&X
KZ_/
