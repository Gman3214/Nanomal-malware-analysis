/*
    This Yara ruleset is under the GNU-GPLv2 license (http://www.gnu.org/licenses/gpl-2.0.html) and open to any user or organization, as    long as you use it under this license.

*/
rule WINAPI_Possible_Enumeration : winapi {
	meta:
		description = "All windows apis that might be used for enumeration"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
		$s1 = "CreateToolhelp32Snapshot"
        $s2 = "EnumDeviceDrivers"
        $s3 = "EnumProcesses"
        $s4 = "EnumProcessModules"
        $s5 = "EnumProcessModulesEx"
        $s6 = "FindFirstFileA"
        $s7 = "FindNextFileA"
        $s8 = "GetLogicalProcessorInformation"
        $s9 = "GetLogicalProcessorInformationEx"
        $s10 = "GetModuleBaseNameA"
        $s11 = "GetSystemDefaultLangId"
        $s12 = "GetVersionExA"
        $s13 = "GetWindowsDirectoryA"
        $s14 = "IsWoW64Process"
        $s15 = "Module32First"
        $s16 = "Module32Next"
        $s17 = "Process32First"
        $s18 = "Process32Next"
        $s19 = "ReadProcessMemory"
        $s20 = "Thread32First"
        $s21 = "Thread32Next"
        $s22 = "GetSystemDirectoryA"
        $s23 = "GetSystemTime"
        $s24 = "ReadFile"
        $s25 = "GetComputerNameA"
        $s26 = "VirtualQueryEx"
        $s27 = "GetProcessIdOfThread"
        $s28 = "GetProcessId"
        $s29 = "GetCurrentThread"
        $s30 = "GetCurrentThreadId"
        $s31 = "GetThreadId"
        $s32 = "GetThreadInformation"
        $s33 = "GetCurrentProcess"
        $s34 = "GetCurrentProcessId"
        $s35 = "SearchPathA"
        $s36 = "GetFileTime"
        $s37 = "GetFileAttributesA"
        $s38 = "LookupPrivilegeValueA"
        $s39 = "LookupAccountNameA"
        $s40 = "GetCurrentHwProfileA"
        $s41 = "GetUserNameA"
        $s42 = "RegEnumKeyExA"
        $s43 = "RegEnumValueA"
        $s44 = "RegQueryInfoKeyA"
        $s45 = "RegQueryMultipleValuesA"
        $s46 = "RegQueryValueExA"
        $s47 = "NtQueryDirectoryFile"
        $s48 = "NtQueryInformationProcess"
        $s49 = "NtQuerySystemEnvironmentValueEx"
        $s50 = "EnumDesktopWindows"
        $s51 = "EnumWindows"
        $s52 = "NetShareEnum"
        $s53 = "NetShareGetInfo"
        $s54 = "NetShareCheck"
        $s55 = "GetAdaptersInfo"
        $s56 = "PathFileExistsA"
        $s57 = "GetNativeSystemInfo"
        $s58 = "RtlGetVersion"
        $s59 = "GetIpNetTable"
        $s60 = "GetLogicalDrives"
        $s61 = "GetDriveTypeA"
        $s62 = "RegEnumKeyA"
        $s63 = "WNetEnumResourceA"
        $s64 = "WNetCloseEnum"
        $s65 = "FindFirstUrlCacheEntryA"
        $s66 = "FindNextUrlCacheEntryA"
        $s67 = "WNetAddConnection2A"
        $s68 = "WNetAddConnectionA"
        $s69 = "EnumResourceTypesA"
        $s70 = "EnumResourceTypesExA"
        $s71 = "GetSystemTimeAsFileTime"
        $s72 = "GetThreadLocale"
        $s73 = "EnumSystemLocalesA"
	condition:
		any of them
}

rule WINAPI_Possible_Injection : winapi {
	meta:
		description = "All windows apis that might be used for Injection"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "CreateFileMappingA"
        $s2 = "CreateProcessA"
        $s3 = "CreateRemoteThread"
        $s4 = "CreateRemoteThreadEx"
        $s5 = "GetModuleHandleA"
        $s6 = "GetProcAddress"
        $s7 = "GetThreadContext"
        $s8 = "HeapCreate"
        $s9 = "LoadLibraryA"
        $s10 = "LoadLibraryExA"
        $s11 = "LocalAlloc"
        $s12 = "MapViewOfFile"
        $s13 = "MapViewOfFile2"
        $s14 = "MapViewOfFile3"
        $s15 = "MapViewOfFileEx"
        $s16 = "OpenThread"
        $s17 = "Process32First"
        $s18 = "Process32Next"
        $s19 = "QueueUserAPC"
        $s20 = "ReadProcessMemory"
        $s21 = "ResumeThread"
        $s22 = "SetProcessDEPPolicy"
        $s23 = "SetThreadContext"
        $s24 = "SuspendThread"
        $s25 = "Thread32First"
        $s26 = "Thread32Next"
        $s27 = "Toolhelp32ReadProcessMemory"
        $s28 = "VirtualAlloc"
        $s29 = "VirtualAllocEx"
        $s30 = "VirtualProtect"
        $s31 = "VirtualProtectEx"
        $s32 = "WriteProcessMemory"
        $s33 = "VirtualAllocExNuma"
        $s34 = "VirtualAlloc2"
        $s35 = "VirtualAlloc2FromApp"
        $s36 = "VirtualAllocFromApp"
        $s37 = "VirtualProtectFromApp"
        $s38 = "CreateThread"
        $s39 = "WaitForSingleObject"
        $s40 = "OpenProcess"
        $s41 = "OpenFileMappingA"
        $s42 = "GetProcessHeap"
        $s43 = "GetProcessHeaps"
        $s44 = "HeapAlloc"
        $s45 = "HeapReAlloc"
        $s46 = "GlobalAlloc"
        $s47 = "AdjustTokenPrivileges"
        $s48 = "CreateProcessAsUserA"
        $s49 = "OpenProcessToken"
        $s50 = "CreateProcessWithTokenW"
        $s51 = "NtAdjustPrivilegesToken"
        $s52 = "NtAllocateVirtualMemory"
        $s53 = "NtContinue"
        $s54 = "NtCreateProcess"
        $s55 = "NtCreateProcessEx"
        $s56 = "NtCreateSection"
        $s57 = "NtCreateThread"
        $s58 = "NtCreateThreadEx"
        $s59 = "NtCreateUserProcess"
        $s60 = "NtDuplicateObject"
        $s61 = "NtMapViewOfSection"
        $s62 = "NtOpenProcess"
        $s63 = "NtOpenThread"
        $s64 = "NtProtectVirtualMemory"
        $s65 = "NtQueueApcThread"
        $s66 = "NtQueueApcThreadEx"
        $s67 = "NtQueueApcThreadEx2"
        $s68 = "NtReadVirtualMemory"
        $s69 = "NtResumeThread"
        $s70 = "NtUnmapViewOfSection"
        $s71 = "NtWaitForMultipleObjects"
        $s72 = "NtWaitForSingleObject"
        $s73 = "NtWriteVirtualMemory"
        $s74 = "RtlCreateHeap"
        $s75 = "LdrLoadDll"
        $s76 = "RtlMoveMemory"
        $s77 = "RtlCopyMemory"
        $s78 = "SetPropA"
        $s79 = "WaitForSingleObjectEx"
        $s80 = "WaitForMultipleObjects"
        $s81 = "WaitForMultipleObjectsEx"
        $s82 = "KeInsertQueueApc"
        $s83= "Wow64SetThreadContext"
        $s84 = "NtSuspendProcess"
        $s85 = "NtResumeProcess"
        $s86 = "DuplicateToken"
        $s87 = "NtReadVirtualMemoryEx"
        $s88 = "CreateProcessInternal"
        $s89 = "EnumSystemLocalesA"
        $s90 = "UuidFromStringA"
	condition:
		any of them
}

rule WINAPI_Possible_Evasion : winapi {
	meta:
		description = "All windows apis that might be used for Evasion"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "CreateFileMappingA"
        $s2 = "DeleteFileA"
        $s3 = "GetModuleHandleA"
        $s4 = "GetProcAddress"
        $s5 = "LoadLibraryA"
        $s6 = "LoadLibraryExA"
        $s7 = "LoadResource"
        $s8 = "SetEnvironmentVariableA"
        $s9 = "SetFileTime"
        $s10 = "Sleep"
        $s11 = "WaitForSingleObject"
        $s12 = "SetFileAttributesA"
        $s13 = "SleepEx"
        $s14 = "NtDelayExecution"
        $s15 = "NtWaitForMultipleObjects"
        $s16 = "NtWaitForSingleObject"
        $s17 = "CreateWindowExA"
        $s18 = "RegisterHotKey"
        $s19 = "timeSetEvent"
        $s20 = "IcmpSendEcho"
        $s21 = "WaitForSingleObjectEx"
        $s22 = "WaitForMultipleObjects"
        $s23 = "WaitForMultipleObjectsEx"
        $s24 = "SetWaitableTimer"
        $s25 = "CreateTimerQueueTimer"
        $s26 = "CreateWaitableTimer"
        $s27 = "SetWaitableTimer"
        $s28 = "SetTimer"
        $s29 = "Select"
        $s31 = "ImpersonateLoggedOnUser"
        $s32 = "SetThreadToken"
        $s33 = "DuplicateToken"
        $s34 = "SizeOfResource"
        $s35 = "LockResource"
        $s36 = "CreateProcessInternal"
        $s37 = "TimeGetTime"
        $s38 = "EnumSystemLocalesA"
        $s39 = "UuidFromStringA"
    condition:
		any of them
}

rule WINAPI_Possible_Spying : winapi {
	meta:
		description = "All windows apis that might be used for Spying"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "AttachThreadInput"
        $s2 = "CallNextHookEx"
        $s3 = "GetAsyncKeyState"
        $s4 = "GetClipboardData"
        $s5 = "GetDC"
        $s6 = "GetDCEx"
        $s7 = "GetForegroundWindow"
        $s8 = "GetKeyboardState"
        $s9 = "GetKeyState"
        $s10 = "GetMessageA"
        $s11 = "GetRawInputData"
        $s12 = "GetWindowDC"
        $s13 = "MapVirtualKeyA"
        $s14 = "MapVirtualKeyExA"
        $s15 = "PeekMessageA"
        $s16 = "PostMessageA"
        $s17 = "PostThreadMessageA"
        $s18 = "RegisterHotKey"
        $s19 = "RegisterRawInputDevices"
        $s21 = "SendMessageA"
        $s22 = "SendMessageCallbackA"
        $s23 = "SendMessageTimeoutA"
        $s24 = "SendNotifyMessageA"
        $s25 = "SetWindowsHookExA"
        $s26 = "SetWinEventHook"
        $s27 = "UnhookWindowsHookEx"
        $s28 = "BitBlt"
        $s29 = "StretchBlt"
        $s30 = "GetKeynameTextA"
    condition:
		any of them
}

rule WINAPI_Internet : winapi {
	meta:
		description = "All windows apis that might be used to try and get out to the Internet"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "WinExec"
        $s2 = "FtpPutFileA"
        $s3 = "HttpOpenRequestA"
        $s4 = "HttpSendRequestA"
        $s5 = "HttpSendRequestExA"
        $s6 = "InternetCloseHandle"
        $s7 = "InternetOpenA"
        $s8 = "InternetOpenUrlA"
        $s9 = "InternetReadFile"
        $s10 = "InternetReadFileExA"
        $s11 = "InternetWriteFile"
        $s12 = "URLDownloadToFile"
        $s13 = "URLDownloadToCacheFile"
        $s14 = "URLOpenBlockingStream"
        $s15 = "URLOpenStream"
        $s16 = "Accept"
        $s17 = "Bind"
        $s18 = "Connect"
        $s19 = "Gethostbyname"
        $s21 = "Inet_addr"
        $s22 = "Recv"
        $s23 = "Send"
        $s24 = "WSAStartup"
        $s25 = "Gethostname"
        $s26 = "Socket"
        $s27 = "WSACleanup"
        $s28 = "Listen"
        $s29 = "ShellExecuteA"
        $s30 = "ShellExecuteExA"
        $s31 = "DnsQuery_A"
        $s32 = "DnsQueryEx"
        $s33 = "WNetOpenEnumA"
        $s34 = "FindFirstUrlCacheEntryA"
        $s35 = "FindNextUrlCacheEntryA"
        $s36 = "InternetConnectA"
        $s37 = "InternetSetOptionA"
        $s38 = "WSASocketA"
        $s39 = "Closesocket"
        $s40 = "WSAIoctl"
        $s41 = "ioctlsocket"
        $s42 = "HttpAddRequestHeaders"
    condition:
		any of them
}

rule WINAPI_Possible_Anti_Debugging : winapi {
	meta:
		description = "All windows apis that might be used for Anti Debugging"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "CreateToolhelp32Snapshot"
        $s2 = "GetLogicalProcessorInformation"
        $s3 = "GetLogicalProcessorInformationEx"
        $s4 = "GetTickCount"
        $s5 = "OutputDebugStringA"
        $s6 = "CheckRemoteDebuggerPresent"
        $s7 = "Sleep"
        $s8 = "GetSystemTime"
        $s9 = "GetComputerNameA"
        $s10 = "SleepEx"
        $s11 = "IsDebuggerPresent"
        $s12 = "GetUserNameA"
        $s13 = "NtQueryInformationProcess"
        $s14 = "ExitWindowsEx"
        $s15 = "FindWindowA"
        $s16 = "FindWindowExA"
        $s17 = "GetForegroundWindow"
        $s18 = "GetTickCount64"
        $s19 = "QueryPerformanceFrequency"
        $s20 = "QueryPerformanceCounter"
        $s21 = "GetNativeSystemInfo"
        $s22 = "RtlGetVersion"
        $s23 = "GetSystemTimeAsFileTime"
        $s24 = "CountClipboardFormats"
    condition:
		any of them
}

rule WINAPI_Possible_Ransom : winapi {
	meta:
		description = "All windows apis that might be used for Ransom ware"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "CryptAcquireContextA"
        $s2 = "EncryptFileA"
        $s3 = "CryptEncrypt"
        $s4 = "CryptDecrypt"
        $s5 = "CryptCreateHash"
        $s6 = "CryptHashData"
        $s7 = "CryptDeriveKey"
        $s8 = "CryptSetKeyParam"
        $s9 = "CryptGetHashParam"
        $s10 = "CryptSetKeyParam"
        $s11 = "CryptDestroyKey"
        $s12 = "CryptGenRandom"
        $s13 = "DecryptFileA"
        $s14 = "FlushEfsCache"
        $s15 = "GetLogicalDrives"
        $s16 = "GetDriveTypeA"
        $s17 = "CryptStringToBinary"
        $s18 = "CryptBinaryToString"
        $s19 = "CryptReleaseContext"
        $s20 = "CryptDestroyHash"
        $s21 = "EnumSystemLocalesA"
    condition:
		any of them
}


rule WINAPI_General : winapi {
	meta:
		description = "All windows apis that can aid a malicious sofware"
		author = "ram .m"
		reference = "https://malapi.io/"
	strings:
        $s1 = "ConnectNamedPipe"
        $s2 = "CopyFileA"
        $s3 = "CreateFileA"
        $s4 = "CreateMutexA"
        $s5 = "CreateMutexExA"
        $s6 = "DeviceIoControl"
        $s7 = "FindResourceA"
        $s8 = "FindResourceExA"
        $s9 = "GetModuleBaseNameA"
        $s10 = "GetModuleFileNameA"
        $s11 = "GetModuleFileNameExA"
        $s12 = "GetTempPathA"
        $s13 = "IsWoW64Process"
        $s14 = "MoveFileA"
        $s15 = "MoveFileExA"
        $s16 = "PeekNamedPipe"
        $s17 = "WriteFile"
        $s18 = "TerminateThread"
        $s19 = "CopyFile2"
        $s20 = "CopyFileExA"
        $s21 = "CreateFile2"
        $s22 = "GetTempFileNameA"
        $s23 = "TerminateProcess"
        $s24 = "SetCurrentDirectory"
        $s25 = "FindClose"
        $s26 = "SetThreadPriority"
        $s27 = "UnmapViewOfFile"
        $s28 = "ControlService"
        $s29 = "ControlServiceExA"
        $s30 = "CreateServiceA"
        $s31 = "DeleteService"
        $s32 = "OpenSCManagerA"
        $s33 = "OpenServiceA"
        $s34 = "RegOpenKeyA"
        $s35 = "RegOpenKeyExA"
        $s36 = "StartServiceA"
        $s37 = "StartServiceCtrlDispatcherA"
        $s38 = "RegCreateKeyExA"
        $s39 = "RegCreateKeyA"
        $s40 = "RegSetValueExA"
        $s41 = "RegSetKeyValueA"
        $s42 = "RegDeleteValueA"
        $s43 = "RegOpenKeyExA"
        $s44 = "RegEnumKeyExA"
        $s45 = "RegEnumValueA"
        $s46 = "RegGetValueA"
        $s47 = "RegFlushKey"
        $s48 = "RegGetKeySecurity"
        $s49 = "RegLoadKeyA"
        $s50 = "RegLoadMUIStringA"
        $s51 = "RegOpenCurrentUser"
        $s52 = "RegOpenKeyTransactedA"
        $s53 = "RegOpenUserClassesRoot"
        $s54 = "RegOverridePredefKey"
        $s55 = "RegReplaceKeyA"
        $s56 = "RegRestoreKeyA"
        $s57 = "RegSaveKeyA"
        $s58 = "RegSaveKeyExA"
        $s59 = "RegSetKeySecurity"
        $s60 = "RegUnLoadKeyA"
        $s61 = "RegConnectRegistryA"
        $s62 = "RegCopyTreeA"
        $s63 = "RegCreateKeyTransactedA"
        $s64 = "RegDeleteKeyA"
        $s65 = "RegDeleteKeyExA"
        $s66 = "RegDeleteKeyTransactedA"
        $s67 = "RegDeleteKeyValueA"
        $s68 = "RegDeleteTreeA"
        $s69 = "RegDeleteValueA"
        $s70 = "RegCloseKey"
        $s71 = "NtClose"
        $s72 = "NtCreateFile"
        $s73 = "NtDeleteKey"
        $s74 = "NtDeleteValueKey"
        $s75 = "NtMakeTemporaryObject"
        $s76 = "NtSetContextThread"
        $s77 = "NtSetInformationProcess"
        $s78 = "NtSetInformationThread"
        $s79 = "NtSetSystemEnvironmentValueEx"
        $s80 = "NtSetValueKey"
        $s81 = "NtShutdownSystem"
        $s82 = "NtTerminateProcess"
        $s83 = "NtTerminateThread"
        $s84 = "RtlSetProcessIsCritical"
        $s85 = "DrawTextExA"
        $s86 = "GetDesktopWindow"
        $s87 = "SetClipboardData"
        $s88 = "SetWindowLongA"
        $s89 = "SetWindowLongPtrA"
        $s90 = "OpenClipboard"
        $s91 = "SetForegroundWindow"
        $s92 = "BringWindowToTop"
        $s93 = "SetFocus"
        $s94 = "ShowWindow"
        $s95 = "NetShareSetInfo"
        $s96 = "NetShareAdd"
        $s97 = "NtQueryTimer"
        $s98 = "GetIpNetTable"
        $s99 = "GetLogicalDrives"
        $s100 = "GetDriveTypeA"
        $s101 = "CreatePipe"
        $s102 = "RegEnumKeyA"
        $s103 = "WNetOpenEnumA"
        $s104 = "WNetEnumResourceA"
        $s105 = "WNetAddConnection2A"
        $s106 = "CallWindowProcA"
        $s107 = "NtResumeProcess"
        $s108 = "lstrcatA"
        $s109 = "ImpersonateLoggedOnUser"
        $s110 = "SetThreadToken"
        $s111 = "SizeOfResource"
        $s112 = "LockResource"
        $s113 = "UuidFromStringA"
    condition:
		any of them
}